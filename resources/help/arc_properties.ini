ADDICTIONS=\
Property   : Addictions\n\r\
Targets    : Mobs\n\r\
Parameters : item name\n\r\
Example    : pot pie\n\r\
Description: \n\r\
This ability governs addictions to food, drink, or smoking.  The parameter \
is the substring to match in the name of the item.  The player with an addiction \
will be annoyed unless he gets his "fix" every rl hour.  Players can only become \
addiction through the engine by smoking, or by a drink infected with inebriation, \
alcohol, or liquor. The player can either "ride out" the addiction for 24 hours, \
suffering increasingly annoying messages as he goes, or he can keep making his fix. \
Addictions are not diseases, and can not be cured with magic or restoration.

AGE=\
Property   : Age\n\r\
Targets    : Items, Mobs\n\r\
Parameters : miliseconds old\n\r\
Example    : 106222323232\n\r\
Description: \n\r\
The ability to age from infancy (an item) to adulthood (a mob).

ALLERGIES=\
Property   : Allergies\n\r\
Targets    : Mobs\n\r\
Parameters : Resource or Race names\n\r\
Example    : STRAWBERRIES DWARF\n\r\
Description: \n\r\
This ability governs allergies.

BAD_REPUTATION=BADREPUTATION
BADREPUTATION=<ABILITY>\
Property   : Bad Reputation\n\r\
Affects    : Mobs\n\r\
Parameters : Percentage of faction gain\n\r\
Example    : 45%\n\r\
Description: \n\r\
The character is of such a poorly received race that others are much less \
forgiving of historical events and unlikely to accept them into society.  \
Faction changes happen much more slowly.

BANISHMENT=\
Property   : Banishment\n\r\
Targets    : Mobs\n\r\
Parameters : [AREA NAME](;[AREA NAME] .. )\n\r\
Example    : Midgaard\n\r\
Description: \n\r\
This mob property makes them unable to enter the area. If the area has child areas \
they will not be able to enter those either.  Even recalling into the area won't work.

SLOW_LEARNER=SLOWLEARNER
SLOWLEARNER=<ABILITY>\
Property   : Slow Learner\n\r\
Affects    : Mobs\n\r\
Parameters : Percentage of experience lost\n\r\
Example    : 20%\n\r\
Description: \n\r\
The character does not learn from experience the way most do, gaining \
fewer experience points than most.

AUTOSTACK=\
Property   : Autostack\n\r\
Targets    : Rooms, Areas\n\r\
Parameters : (TRIGGERCOUNT=[NUM]) (GROUPCOUNT=[NUM]) (CHECKTICKS=[NUM])\n\r\
Example    : triggercount=1000 groupcount=10 checkticks=600\n\r\
Description: \n\r\
This ability governs the automatic packaging (as stacks) of identical items, \
whenever the total number of items in a room is larger than TRIGGERCOUNT, and \
whenever there are at least GROUPCOUNT identical items to package.  The checks \
are made every CHECKTICKS ticks.\n\r\
\n\r\
As this is a property, it will not operate only sporadically on rooms, but like \
clockwork on areas.

GAIT=\
Property   : Gait\n\r\
Targets    : Mobs\n\r\
Parameters : ARRIVE=[STR] LEAVE=[STR] STATE=[STR]\n\r\
Example    : ARRIVE="arrives" leave="leaves" state="walking"\n\r\
Description: \n\r\
This ability changes how mobs appear to be moving from room to room.

INJURY=\
Property   : Injury\n\r\
Targets    : Mobs\n\r\
Parameters : [BODY PART CODE]:[PART NAME]:[DAMAGE AMT];(...)\n\r\
Example    : 1:left finger:23\n\r\
Description: \n\r\
This mob property denotes damage to a particular body part, which is a \
prelude to amputation.

LOYALTY=\
Property   : Loyalty\n\r\
Targets    : Mobs\n\r\
Parameters : NAME=[PLAYER] TELEPORT=[TRUE/FALSE]\n\r\
Example    : NAME=Bob TELEPORT=false\n\r\
Description: \n\r\
This mob property makes a mob keep an eye out for a particular player and Follow them when \
they encounter them.  If TELEPORT=true, they will also attempt to teleport to the player \
before following them.

MERCHANT=\
Property   : Merchant\n\r\
Targets    : Items, Mobs, Areas, Rooms, Exits\n\r\
Parameters : <XML> or (ISELL=[whattobuy] IPREJ=[prejudice] IBUDJ=[money]\n\r\
Parameters :           IDVAL=[devalue] IGNOR=[mask]\n\r\
Example    : ISELL=WEAPONS IBUDJ=1000 IGNOR=-Race +Elf\n\r\
Description: \n\r\
Merchant is primarily known as a common skill for allowing a player \
to sell items to other players.  However, when used as a property/effect \
on ungettable items, areas, rooms, or exits, it allows items to be bought \
and sold just like a shopkeeper.  Archons may add to the items to sell by \
either dropping the item in the same room as the Merchant, or (in the case \
of an area), throwing the item up into the air.  The parameters have meanings \
identical to those listed in the Archon's Guide, except for budget, which is \
the maximum amount to spend on any particular item purchased from a player.

MOOD=\
Property   : Mood\n\r\
Targets    : Mobs\n\r\
Parameters : [name of the mood]\n\r\
Example    : PROUD\n\r\
Example    : HAPPY\n\r\
Description: \n\r\
This ability governs player and mob moods.  It can be added like a property to mobs.

PREGNANCY=\
Property   : Pregnancy\n\r\
Targets    : Mobs\n\r\
Parameters : Start Date/Delivery Date/Fathers Name/Fathers Race\n\r\
Example    : 106222323232/12312232322/Bob/Human\n\r\
Description: \n\r\
The ability to be pregnant, and to eventually give birth.  A consequence \
of sex under certain circumstances.

PRISONER=\
Property   : Prisoner\n\r\
Targets    : Mobs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
This mob property makes them unable to recall or magically leave their present location. \
It also prevents fleeing from combat.

PROP_ABILITYIMMUNITY=\
Property   : Prop_AbilityImmunity\n\r\
Targets    : Anything\n\r\
Parameters : (OWNER;) (WEARER;)list of abilities with optional error string, ';' delimited\n\r\
Example    : OWNER;Disease_Cold;Disease_Flu;Spell_Fireball\n\r\
Example    : Disease_Cold=<T-NAME> is immune to <O-NAME>;Spell_Fireball=<T-NAME> can't be burnt!\n\r\
Description: \n\r\
Makes the mob, item, or whatever immune to the listed disease, spell \
or similar affects.  Items will pass their immunity on to their owners \
if the OWNER flag is present, or the wielder if the WIELDER flag is present.   

PROP_ABSORBDAMAGE=\
Property   : Prop_AbsorbDamage\n\r\
Targets    : Items, Mobs, Areas, Rooms\n\r\
Parameters : Damage Absorption percentages or amounts, the list of absorbed damage types\n\r\
Example    : 50% +ALL -SILVER -CLOTH -LEATHER\n\r\
Example    : 5 +ALL -MAGIC -SLASHING -FROSTING\n\r\
Example    : 25% +ALL -LEVEL15\n\r\
Example    : 15% +BASHING 1 +IRON 3 +STEEL 15% +MAGIC\n\r\
Description: \n\r\
Whenever the item with this property is worn, or for the mob with \
this property, or anyone in the area or room with this property, they will \
attain damage absorption from the types and/or materials of weapons specified.  \
Damage absorption may be represented as a percentage or as a straight amount. \
Damage amounts must be before the type of damage absorbed in the parameters. \
Damage amounts/percentages in the negative will add to the damage. \
If the term "ENHANCED" is included in the parameters, and percentage absorption amounts are used, \
then this will also attempt to auto-save against skills according to the percentage \
change, or, if the percentage is negative, make the effect last longer. \
Here are the parameters: \n\r\
+ALL - Specifies that, by default, the mob has ALL damage absorbed.\n\r\
-[DAMAGETYPE]- Creates an exception to the +ALL rule by permitting normal damage \
of the given type.  Examples for DAMAGETYPE would be -PIERCING, -GASSING, \
-SLASHING, -BURNING, -MELTING, -NATURAL, -BASHING, etc.\n\r\
+[DAMAGETYPE]- Can be used instead of +ALL to absorb damage from the given \
damage type.  Examples for DAMAGETYPE would be +PIERCING, +GASSING, \
+SLASHING, +BURNING, +MELTING, +NATURAL, +BASHING, etc.\n\r\
-[WEAPONCLASS]- Creates an exception to the +ALL rule by permitting normal damage \
of the given class.  Examples for WEAPONCLASS would be -AXE, -BLUNT, -EDGED, \
-FLAILED, -HAMMER, -KARATE, -POLEARM, -RANGED, -SWORD, -DAGGER, -STAFF, -THROWN, etc.\n\r\
-[WEAPONCLASS]- Can be used instead of +ALL to absorb damage from the given \
weapon class.  Examples for WEAPONCLASS would be +AXE, +BLUNT, +EDGED, \
+FLAILED, +HAMMER, +KARATE, +POLEARM, +RANGED, +SWORD, +DAGGER, +STAFF, +THROWN, etc.\n\r\
-[ABILITYCODE]- Creates an exception to the +ALL rule by permitting normal damage \
of the given type of ability.  Examples for ABILITYCODE would be -THIEF_SKILL, -PRAYER, etc.  Do list abilitycodes.\n\r\
+[ABILITYCODE]- Can be used instead of +ALL to absorb damage from the given \
type of ability.  Examples for ABILITYCODE be +SPELL, +SONG, etc.. Do list abilitycodes.\n\r\
-[ABILITYDOMAIN]- Creates an exception to the +ALL rule by permitting normal damage \
of the given domain of ability.  Examples for ABILITYDOMAIN would be -ILLUSION, -DEATH_LORE, etc. Do list abilitydomains.\n\r\
+[ABILITYDOMAIN]- Can be used instead of +ALL to absorb damage from the given \
domain of ability.  Examples for ABILITYDOMAIN be +SPELL, +SONG, etc.. Do list abilitydomains.\n\r\
-[ABILITYFLAG]- Creates an exception to the +ALL rule by permitting normal damage \
of the given flagged abilities.  Examples for ABILITYFLAG would be -UNHOLY, -CHARMING, etc. Do list abilityflags.\n\r\
+[ABILITYFLAG]- Can be used instead of +ALL to absorb damage from the given \
flagged abilities.  Examples for ABILITYDOMAIN be +HOLY, +CHARMING, etc..  Do list abilityflags.\n\r\
-[ABILITYID]- Creates an exception to the +ALL rule by permitting normal damage \
of the given specific ability.  Examples for ABILITYID would be -SPELL_FIREBALL, etc. \n\r\
+[ABILITYID]- Can be used instead of +ALL to absorb damage from the given \
specific ability.  Examples for ABILITYID be +SPELL_MAGICMISSILE, etc.. \n\r\
-MAGIC - Creates an exception to the +ALL rule by permitting normal damage from \
magical spells and magical weapons.\n\r\
+MAGIC - If +ALL is not used, this will absorb damage from magical \
spells and weapons.\n\r\
-LEVELX - Creates an exception to the +ALL rule by permitting normal damage from \
weapons whose level is X or better. Example: -LEVEL1, -LEVEL5, -LEVEL10, etc.\n\r\
+LEVELX - Can be used instead of +ALL to absorb damage from \
weapons whose level is X or lower. Example: +LEVEL1, +LEVEL5, +LEVEL10, etc.\n\r\
-MATERIALTYPE - Creates an exception to the +ALL rule above by permitting \
normal damage from a weapon made of the given MATERIALTYPE.  Where MATERIALTYPE \
may be any valid material, such as SILVER, WOOD, COTTON, etc.  As for the \
damage types above, +MATERIALTYPE may be used instead of +ALL to absorb \
damage from materials a given material.\n\r\
-PARALYSIS - Creates an exception to the +All rule by permitting normal damage from paralysis spells.\n\r\
+PARALYSIS - If +All is not used, this absorbs damage from damage from fire spells.\n\r\
-FIRE - Creates an exception to the +All rule by permitting normal damage from fire spells.\n\r\
+FIRE - If +All is not used, this absorbs damage from damage from fire spells.\n\r\
-COLD - Creates an exception to the +All rule by permitting normal damage from cold spells.\n\r\
+COLD - If +All is not used, this absorbs damage from damage from cold spells.\n\r\
-WATER - Creates an exception to the +All rule by permitting normal damage from water spells.\n\r\
+WATER - If +All is not used, this absorbs damage from damage from water spells.\n\r\
-GAS - Creates an exception to the +All rule by permitting normal damage from gas spells.\n\r\
+GAS - If +All is not used, this absorbs damage from damage from gas spells.\n\r\
-MIND - Creates an exception to the +All rule by permitting normal damage from mind spells.\n\r\
+MIND - If +All is not used, this absorbs damage from damage from mind spells.\n\r\
-JUSTICE - Creates an exception to the +All rule by permitting normal damage from justice spells.\n\r\
+JUSTICE - If +All is not used, this absorbs damage from damage from justice spells.\n\r\
-ACID - Creates an exception to the +All rule by permitting normal damage from acid spells.\n\r\
+ACID - If +All is not used, this absorbs damage from damage from acid spells.\n\r\
-ELECTRICITY - Creates an exception to the +All rule by permitting normal damage from electric spells.\n\r\
+ELECTRICITY - If +All is not used, this absorbs damage from damage from electric spells.\n\r\
-POISON - Creates an exception to the +All rule by permitting normal damage from poison spells.\n\r\
+POISON - If +All is not used, this absorbs damage from damage from poison spells.\n\r\
-UNDEAD - Creates an exception to the +All rule by permitting normal damage from undead spells.\n\r\
+UNDEAD - If +All is not used, this absorbs damage from damage from undead/evil spells.\n\r\
-DISEASE - Creates an exception to the +All rule by permitting normal damage from disease spells.\n\r\
+DISEASE - If +All is not used, this absorbs damage from damage from disease spells.\n\r\
-TRAPS - Creates an exception to the +All rule by permitting normal damage from traps spells.\n\r\
+TRAPS - If +All is not used, this absorbs damage from damage from traps spells.\n\r

PROP_ADDDAMAGE=\
Property   : Prop_AddDamage\n\r\
Targets    : Items, Mobs\n\r\
Parameters : Extra Damage percentages or amounts, the list of extra damage types\n\r\
Example    : 50% PIERCING\n\r\
Example    : 5 SLASHING FROST\n\r\
Description: \n\r\
Whenever the item with this property is worn, or for the mob with \
this property, they will do extra damage of the types specified.  \
Extra Damage may be represented as a percentage or as a straight amount. \
Damage amounts must be before the type of extra damage in the parameters. \
* Here are the classes of damage: \n\r\
PIERCING, GASSING, SLASHING, BURNING, MELTING, NATURAL, BASHING, etc.\n\r\
* Here are the types of damage attacks: \n\r\
PARALYSIS, FIRE, COLD, WATER, GAS, MIND, JUSTICE, ACID, ELECTRICITY, POISON, \
UNDEAD, DISEASE, TRAPS, WEAPONATTACK.\n\r

PROP_ADJUSTER=\
Property   : Prop_Adjuster\n\r\
Targets    : Mobs\n\r\
Parameters : statistic names followed by a +, -, or = and a value\n\r\
Parameters : The above parameters may be followed by an optional mask\n\r\
Example    : str+2 dex-2 move+100 class=thief race=elf gender=F\n\r\
Example    : str+2 dex-2 move+100 MASK=-Race +Dwarf\n\r\
Description: \n\r\
The listed effects will be given to the mob.  All parameters use the + or - adjuster, except the \
class, race, and gender parameters noted above. \
Valid parameters are as follows: \n\r\
strength dexterity constitution charisma wisdom intelligence \n\r\
maxstr maxdex maxcon maxcha maxwis maxint (maximum trainable) \n\r\
savepar savefir savecol savewat savegas savemin savegen savejus \n\r\
saveaci saveele savepoi saveund savemag savedis savetra \n\r\
ability (magical level), armor, attacks (prowess), damage (max), \
disposition (sitting/standing/flying/etc), level, rejuv(!NO!), \
senses (blind/infravision/darkvision/etc), speed (#attacks), \
height, weight, gender, class, clstart, race, hitpoints, hunger (stomach size), \
mana, movement, thirst (stomach size) conversion weightadj saveblunt \
savepierce saveslash savespells saveprayers savesongs savechants \
critpctweapons critpctmagic critdmgweapons critdmgmagic. \n\r\
\n\r\
By default, the values + or - are added to the existing values.  However, if \
MULTIPLYPH=true is included in the parameters, then attack, armor, and damage \
will instead have their values multiplied by the given value / 100. Likewise, \
if MULTIPLYCH=true is included, then hitpoints, mana, and movement are similarly \
multiplied instead of added.  All other values act the same.\
\n\r\
The parameters may also END with the key word MASK= followed by a mask.  This \
mask will select which kinds of mobs and players will be affected by this property. \
This may seem a strange parameter for a mobs-only property, but perhaps you can find \
a use for it. :) See ZAPPERMASKS for more information on zapper mask syntax.

PROP_AREAFORSALE=\
Property   : Prop_AreaForSale\n\r\
Targets    : Areas\n\r\
Parameters : (RENTAL )Price of the area\n\r\
Example    : 1000000\n\r\
Example    : Bob/100000\n\r\
Description: \n\r\
Makes this area available for purchase by a player.  To have a shopkeeper sell \
the area, you must create a GenTitle or StdTitle item with the area name as the \
property id and give it to the shopkeeper to sell.  The system will automatically \
maintain the integrity of any items left in the rooms, including restoring them \
on reboot. The title received for purchasing a room may be GIVEn or SELLed to \
change possession of the property.  The word rental followed by a space may \
preceed the price to make the price of the property be charged every month \
automatically out of a Bankers account.  Failure to make rent returns the property \
to sellable status.\n\r\
\n\r\
When property is sold, it will be listed as the owner with a slash and the price.  \
Entering this sort of parameter directly is the quick way to give players or clans property. \n\r\
\n\r\
See also Prop_ReqCapacity for the means to set limits on players building abilities on \
their property.

PROP_ARTIFACT=\
Property   : Prop_Artifact\n\r\
Targets    : Items\n\r\
Parameters : autodrop=[T/F] nomobs=[T/F] nolocate=[T/F] nocast=[T/F]\n\r\
Example    : nomobs=false\n\r\
Description: \n\r\
The items with this property will persist in their last known location past \
reboots, and optionally always drop from players inventories when they quit, \
be invulnerable to damage, not be possessable by mobs, and not capable of \
being acted upon with skills or spells. By default, all of the above is true, \
though that can change by setting one of the following parameters to false: \n\r\
autodrop - the item drops from player inventories when they quit or shutdown\n\r\
nomobs - the item may not be picked up by a non-player \n\r\
nolocate - the item may not be located via Locate Object spell\n\r\
nocast - the item may not have ANY spells cast upon it

PROP_ASTRALSPIRIT=\
Property   : Prop_AstralSpirit\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
This property makes the mob into an incorporeal spirit.  It is used \
to support the "Astral Projection" chant.

PROP_CLANEQUIPMENT=\
Property   : Prop_ClanEquipment\n\r\
Targets    : Items\n\r\
Parameters : [TYPE] [POWER#] [CLAN NAME] [CLAN TYPE]\n\r\
Example    : Acid 5 "The Skooters" "Guild"\n\r\
Description: \n\r\
Base property for clan equipment.  Do not use independent of the clan spells.

PROP_CLIMBABLE=\
Property   : Prop_Climbable\n\r\
Targets    : Exits, Rooms, Portals\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Forces players to climb, fly, or use a ladder through the exit or room with this property.

PROP_CLOSECOMMAND=\
Property   : Prop_CloseCommand\n\r\
Targets    : Containers, Exits\n\r\
Parameters : [COMMAND WORD] ([PARMS...];...\n\r\
Example    : twist knob;tw knob;twi knob\n\r\
Example    : smack botto*\n\r\
Description: \n\r\
When applied to an open container or exit, this property will force \
the affected openable to close and maybe lock when the command phrase is entered \
by the user in its presence.  The command word must match exactly, and the \
command entered must otherwise be completely invalid.  PARMS arguments must also \
match exactly, although any PARM arg may end with * to use a starting string wildcard. \
A PARM argument may also end with ** to match the rest of the users entered command string.

PROP_CLOSEDDAYNIGHT=\
Property   : Prop_ClosedDayNight\n\r\
Targets    : Items, Mobs, Rooms, Exits\n\r\
Parameters : (DAY/NIGHT)(SLEEP)(SIT)(LOCKUP)(HOURS=0-13)(HOME=Room#)\n\r\
Example    : DAY\n\r\
Example    : SLEEP HOURS=5-10\n\r\
Example    : "Home=My Area#123" SLEEP LOCKUP\n\r\
Example    : "Home=Bob`s House" SLEEP LOCKUP "SHOPMSG=Go Away! I'm Closed!"\n\r\
Description: \n\r\
Affects the thing with this property depending on the time of day. \
By default, this property activates at night.  If the DAY paramater is \
included, it will activate by day instead. The effect of the property is that \
rooms will go dark, exits will close, and items will become unseeable. \
Mobs will become unseeable by default, though if the sit or sleep flags are \
set, they will do that instead.  LOCKUP will cause the mob to lock up his \
starting room, if any doors with locks are found.  If a Home Room is specified \
with the HOME= parameter, the mob will track to that room at closing time, then \
back to their start room the next day.  For shopkeepers, you can specify \
a string for them to say whenever someone tries to interact with them as \
a shopkeeper during closed hours.

PROP_CLOSEDSEASON=\
Property   : Prop_Closedseason\n\r\
Targets    : Items, Mobs, Rooms, Exits\n\r\
Parameters : (SUMMER/SPRING/WINTER/FALL/DAY/NIGHT\n\r\
Parameters :  DUSK/DAWN/RAIN/SLEET/SNOW/CLEAR/HEATWAVE\n\r\
Parameters :  THUNDERSTORM/BLIZZARD/WINDY\n\r\
Parameters :  DROUGHT/DUSTSTORM/COLD/HAIL/CLOUDY)\n\r\
Example    : DAY\n\r\
Example    : WINTER BLIZZARD\n\r\
Description: \n\r\
Affects the thing with this property depending on the weather, or time of the year. \
By default, this property does not activate.  You must specify one or more times, seasons, \
or conditions under which the object will no longer be visible.

PROP_COMBATADJUSTER=\
Property   : Prop_CombatAdjuster\n\r\
Targets    : MOB\n\r\
Parameters : (ATTACK+/-[PCT NUMER]) (ARMOR+/-[PCT NUMER]) (DAMAGE+/-[PCT NUMER])\n\r\
Parameters : (HP+/-[PCT NUMER]) (MANA+/-[PCT NUMER]) (MOVE+/-[PCT NUMER])\n\r\
Parameters : (ATTACK=[PCT NUMER]) (ARMOR=[PCT NUMER]) (DAMAGE=[PCT NUMER])\n\r\
Parameters : (HP=[PCT NUMER]) (MANA=[PCT NUMER]) (MOVE=[PCT NUMER])\n\r\
Example    : \n\r\
Example    : ATTACK+25 DAMAGE-20 MANA=1000\n\r\
Description: \n\r\
This property either adjusts a mobs current stats by a percentage value as specified, or sets \
the value to a specific number.  This property is mostly useless for builders, but has internal uses.

PROP_COMMONTWISTER=\
Property   : Prop_CommonTwister\n\r\
Targets    : Anything\n\r\
Parameters : SKILL=[*/SKILL] MASK=[*/NAME] (NAME=[*/NEW]) (DISPLAY=[*/NEW]) (MATERIAL=[*/NEW]);([REPEAT])\n\r\
Example    : skill=Foraging mask=berries name="some corn" display="some corn is here" material=corn\n\r\
Example    : skill=* mask=* name="some stuff" display="some stuff";skill=* mask=* name="some other" display="some other"\n\r\
Example    : \n\r\
Description: \n\r\
This property changes the results from the use of common skills.  This property \
requires the SKILL and MASK parameters, and at least one of the other parameters \
(NAME, DISPLAY, or MATERIAL).  For each parameter, * may be used to match anything \
or a random thing.

COPYRIGHT=\
Property   : Copyright\n\r\
Targets    : Items\n\r\
Parameters : ([NAME OF COPYRIGHT])\n\r\
Example    : \n\r\
Example    : Bob\n\r\
Description: \n\r\
When placed on an item, it prevents it from being transcribed, \
copied by the duplicate spell, renamed or titled by the BookNaming \
or Titling skills, or edited by the BookEdit skill.

PROP_CRAWLSPACE=\
Property   : Prop_Crawlspace\n\r\
Targets    : Exits, Rooms, Areas\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Forces players to crawl through the exit or room with this property.

PROP_DOPPLEGANGER=\
Property   : Prop_Doppleganger\n\r\
Targets    : Mobs, Items\n\r\
Parameters : nothing, a level change + or -, a level %, or\n\r\
:          : MIN=[NUM], MAX=[NUM], LEVELADD=[NUM], LEVELPCT=[PCT%],\n\r\
:          : PLAYERSONLY=[true/false], PLAYERSNFOLS=[true/false]\n\r\
:          : ASMATERIAL=[RESOURCE]\n\r\
Example    : \n\r\
Example    : 10\n\r\
Example    : 150%\n\r\
Example    : MAX=20 MIN=5 LEVELADD=0 LEVELPCT=100% PLAYERSONLY=false\n\r\
Example    : MAX=20 MIN=5 ASMATERIAL=IRON\n\r\
Description: \n\r\
When this property is on a mob, it makes the mob the same level as those in the \
room with it, or as those who are fighting it.  The mob will only change, however, \
if the mob is at full hit points, to prevent mobs from being "softened up". \
When the property is on armor or \
a weapon, it will adjust the strength and level of the item appropriate to its owner.\n\r\
\n\r\
A parameter may be given to always adjust the level of the item up or down from normal, \
be multiplied by the level as a percentage, or a number of parameter variables like: \
MIN to set a minimum level, MAX to set a maximum level, LEVELADD to add a fixed number \
to the level, LEVELPCT to multiply a percentage by the level, PLAYERSONLY to limit \
the level calculating mobs to players only, PLAYERSNFOLS to limit the level \
calculating mob to players or their followers only, and ASMATERIAL to change the \
material of the item only for stat calculation purposes.

PROP_ENLARGEROOM=\
Property   : Prop_EnlargeRoom\n\r\
Targets    : Rooms, Areas\n\r\
Parameters : number or adjustment of movement points\n\r\
Example    : 2\n\r\
  Example  : +2\n\r\
  Example  : -2\n\r\
  Example  : /2\n\r\
  Example  : *2\n\r\
  Example  : /2.5\n\r\
  Example  : *1.5\n\r\
Description: \n\r\
Change the number of movement points required to cross the room, the +-/* signs may be \
used to adjust the amount for a given room, or an absolute value may be given.

PROP_ENTERADJUSTER=\
Property   : Prop_EnterAdjuster\n\r\
Targets    : Rooms, Exits\n\r\
Parameters : statistic names followed by a +, -, or = and a value\n\r\
  Example  : and/or spells separated by semicolons, and an optional mask\n\r\
Example    : str+2 dex-2 move+100 class=thief race=elf gender=F;Prayer_Bless;\n\r\
Example    : str+2 dex-2 move+100 MASK=-Race +Dwarf\n\r\
Example    : str+2 gender=F;Prayer_Bless;MASK=-Race +Dwarf\n\r\
Description: \n\r\
Upon entering this room or exit, the listed effects or spells will be \
PERMANENTLY ADDED to the mob.  All parameters use the + or - adjuster, except the \
class, race, and gender parameters noted above. \
Valid parameters are as follows: \n\r\
strength dexterity constitution charisma wisdom intelligence \n\r\
maxstr maxdex maxcon maxcha maxwis maxint (maximum trainable) \n\r\
savepar savefir savecol savewat savegas savemin savegen savejus \n\r\
saveaci saveele savepoi saveund savemag savedis savetra \n\r\
ability (magical level), armor, attacks (prowess), damage (max), \
disposition (sitting/standing/flying/etc), level, rejuv(!NO!), \
senses (blind/infravision/darkvision/etc), speed (#attacks), \
height, weight, gender, class, race, hitpoints, hunger (stomach size), \
mana, movement, thirst (stomach size) conversion weightadj saveblunt \
savepierce saveslash savespells saveprayers savesongs savechants \
critpctweapons critpctmagic critdmgweapons critdmgmagic, experience, practices \
trains, questpoints, coins. \n\r\
\n\r\
The parameters may also END with the key word MASK= followed by a mask.  This \
mask will select which kinds of mobs and players will be affected by this property. \
See ZAPPERMASKS for more information on zapper mask syntax.

PROP_FAMILIAR=\
Property   : Prop_Familiar\n\r\
Targets    : MOB\n\r\
Parameters : The familiar code number or name\n\r\
Example    : rat\n\r\
Description: \n\r\
This property is a special MOB property created for the find familiar spell. \
It handles all the special benefits of the familiar type, along with the \
benefits to the owner.  It will also destroy the familiar when no longer \
following the owner.

PROP_FIGHTSPELLCAST=\
Property   : Prop_FightSpellCast\n\r\
Targets    : Weapon (Item)\n\r\
Parameters : A percentage, and proper spell names separated by semicolons\n\r\
Parameters : Spell names may optionally have parameters in parenthesis\n\r\
Parameters : The above parameters may be followed by an optional mask\n\r\
Example    : 50%;Spell_Invisible;Prayer_Sanctuary\n\r\
Example    : 90%;Spell_Portal(Somewhere else);Prayer_SummonElemental(/FIRE)\n\r\
Example    : Spell_Portal(Somewhere else);MASK=-RACE +Dwarf\n\r\
Description: \n\r\
Causes a spell to be cast upon the target being struck during melee combat. \
This property also supports a % chance of triggering.\n\r\
\n\r\
The parameters may also END with the key word MASK= followed by a mask.  This \
mask will select which kinds of mobs and players will be affected by this property. \
See ZAPPERMASKS for more information on zapper mask syntax.

PROP_HAVEADJUSTER=\
Property   : Prop_HaveAdjuster\n\r\
Targets    : Items\n\r\
Parameters : statistic names followed by a +, -, or = and a value\n\r\
Parameters : The above parameters may be followed by an optional mask\n\r\
Example    : str+2 dex-2 move+100 class=thief race=elf gender=F\n\r\
Example    : str+2 dex-2 move+100 MASK=-Race +Dwarf\n\r\
Description: \n\r\
So long as the item with this property is owned, the listed effects will be \
given to the owner.  All parameters use the + or - adjuster, except the \
class, race, and gender parameters noted above. \
Valid parameters are as follows: \n\r\
strength dexterity constitution charisma wisdom intelligence \n\r\
maxstr maxdex maxcon maxcha maxwis maxint (maximum trainable) \n\r\
savepar savefir savecol savewat savegas savemin savegen savejus \n\r\
saveaci saveele savepoi saveund savemag savedis savetra \n\r\
ability (magical level), armor, attacks (prowess), damage (max), \
disposition (sitting/standing/flying/etc), level, rejuv(!NO!), \
senses (blind/infravision/darkvision/etc), speed (#attacks), \
height, weight, gender, class, race, hitpoints, hunger (stomach size), \
mana, movement, thirst (stomach size) conversion weightadj saveblunt \
savepierce saveslash savespells saveprayers savesongs savechants \
critpctweapons critpctmagic critdmgweapons critdmgmagic. \n\r\
\n\r\
By default, the values + or - are added to the existing values.  However, if \
MULTIPLYPH=true is included in the parameters, then attack, armor, and damage \
will instead have their values multiplied by the given value / 100. Likewise, \
if MULTIPLYCH=true is included, then hitpoints, mana, and movement are similarly \
multiplied instead of added.  All other values act the same.\
\n\r\
The parameters may also END with the key word MASK= followed by a mask.  This \
mask will select which kinds of mobs and players will be affected by this property. \
See ZAPPERMASKS for more information on zapper mask syntax.

PROP_HAVEENABLER=\
Property   : Prop_HaveEnabler\n\r\
Targets    : Items\n\r\
Parameters : a list of properly named spells separated by semicolons\n\r\
Parameters : Spell names may optionally have parameters in parenthesis\n\r\
Parameters : The above parameters may be followed by an optional mask\n\r\
Example    : Spell_MageArmor;Spell_Shield\n\r\
Example    : 90%;Spell_Portal(Somewhere else);Prayer_SummonElemental(/FIRE)\n\r\
Example    : Spell_MageArmor;Spell_Shield; MASK=-RACE +Dwarf\n\r\
Description: \n\r\
So long as the item with this property is owned, the owner \
will be granted the spells, skills listed.  The percentage given is optional, \
and will be the proficiency of the skill.  If a percentage is not given, the \
default is 100%.  \n\r\
\n\r\
The parameters may also END with the key word MASK= followed by a mask.  This \
mask will select which kinds of mobs and players will be affected by this property. \
See ZAPPERMASKS for more information on zapper mask syntax.

PROP_HAVERESISTER=\
Property   : Prop_HaveResister\n\r\
Targets    : Items\n\r\
Parameters : resistance names followed by percentages\n\r\
Parameters : Parameters may be followed by an optional mask\n\r\
Example    : magic 50% poison -10%\n\r\
Example    : magic poison 50% pierce -10% MASK=-RACE +Dwarf\n\r\
Description: \n\r\
So long as the item with this property is owned, the owner will gain certain \
resistances and immunities in the parameters. \
The effects which may be included are: \n\r\
Resistances: gas fire electricity mind magic cold acid water evil (undead) \n\r\
Resistances: justice (as per many thief abilities) \n\r\
Resistances: weapons blunt pierce slash non-magical-weapons non-silver-weapons\n\r\
Resistances:  -- weapons get reduced % damage per round, lvl based, with limits.\n\r\
:          :  -- always modifier makes weapon resists always work, no limits.\n\r\
Resistances: spell chant song prayer thief_skill (ability types) \n\r\
Resistances: enchantment/charm kicking vexing conjuration (ability domains)\n\r\
Immunities : teleport (includes gate, summon) holy disease poison\n\r\
\n\r\
The parameters may also END with the key word MASK= followed by a mask.  This \
mask will select which kinds of mobs and players will be affected by this property. \
See ZAPPERMASKS for more information on zapper mask syntax.

PROP_HAVESPELLCAST=\
Property   : Prop_HaveSpellCast\n\r\
Targets    : Items\n\r\
Parameters : a list of properly named spells separated by semicolons\n\r\
Parameters : Spell names may optionally have parameters in parenthesis\n\r\
Parameters : The above parameters may be followed by an optional mask\n\r\
Example    : Spell_MageArmor;Spell_Shield\n\r\
Example    : 90%;Spell_Portal(Somewhere else);Prayer_SummonElemental(/FIRE)\n\r\
Example    : Spell_MageArmor;Spell_Shield; MASK=-RACE +Dwarf\n\r\
Description: \n\r\
So long as the item with this property is owned, the owner will be under the \
effect of the listed spells. The flag NOUNINVOKE can be substituted for a spell \
to make all the effects non-dispellable until the property no longer applies; \
use this flag with care! The flag LEVEL=[NUMBER] can also be substituted for a spell \
name to force all the listed effects be cast at a different level than default.\
The flag MAXTICKS=[NUMBER] can be used to shorted the length of spell casts. \n\r\
\n\r\
The parameters may also END with the key word MASK= followed by a mask.  This \
mask will select which kinds of mobs and players will be affected by this property. \
See ZAPPERMASKS for more information on zapper mask syntax.

PROP_HAVEZAPPER=\
Property   : Prop_HaveZapper\n\r\
Targets    : Items\n\r\
Parameters : masking parameters described below, optional zap message\n\r\
Example    : -class +mage -race +elf -evil\n\r\
Example    : MESSAGE="<O-NAME> flies out of <S-NAME>'s hands!" -class +mage\n\r\
Description: \n\r\
Whenever this item is picked up by a mob, the item will be \
zapped out of the mobs hands if they meet the parameters.  \
An optional MESSAGE parameter can define what is seen when the zap occurs. \
Also optionally, the parameters can start with the word ACTUAL to change \
zapping behavior to look at actual values instead of perceived values \
(this about a class check applied to a Charlatan.) \
Valid masking parameters include:  \n\r\
<ZAP=disallow> 

PROP_HEREADJUSTER=\
Property   : Prop_HereAdjuster\n\r\
Targets    : Rooms\n\r\
Parameters : statistic names followed by a +, -, or = and a value\n\r\
Parameters : The above parameters may be followed by an optional mask\n\r\
Example    : str+2 dex-2 move+100 class=thief race=elf gender=F\n\r\
Example    : str+2 dex-2 move+100 MASK=-RACE +Dwarf\n\r\
Description: \n\r\
So long as the room with this property is occupied, the listed effects will be \
given to the occupants.  All parameters use the + or - adjuster, except the \
class, race, and gender parameters noted above. \
Valid parameters are as follows: \n\r\
strength dexterity constitution charisma wisdom intelligence \n\r\
maxstr maxdex maxcon maxcha maxwis maxint (maximum trainable) \n\r\
savepar savefir savecol savewat savegas savemin savegen savejus \n\r\
saveaci saveele savepoi saveund savemag savedis savetra \n\r\
ability (magical level), armor, attacks (prowess), damage (max), \
disposition (sitting/standing/flying/etc), level, rejuv(!NO!), \
senses (blind/infravision/darkvision/etc), speed (#attacks), \
height, weight, gender, class, race, hitpoints, hunger (stomach size), \
mana, movement, thirst (stomach size) conversion weightadj saveblunt \
savepierce saveslash savespells saveprayers savesongs savechants \
critpctweapons critpctmagic critdmgweapons critdmgmagic. \n\r\
\n\r\
The parameters may also END with the key word MASK= followed by a mask.  This \
mask will select which kinds of mobs and players will be affected by this property. \
See ZAPPERMASKS for more information on zapper mask syntax.

PROP_HEREENABLER=\
Property   : Prop_HereEnabler\n\r\
Targets    : Rooms, Areas\n\r\
Parameters : a list of properly named spells separated by semicolons\n\r\
Parameters : Spell names may optionally have parameters in parenthesis\n\r\
Parameters : The above parameters may be followed by an optional mask\n\r\
Example    : Spell_MageArmor;Spell_Shield\n\r\
Example    : 90%;Spell_Portal(Somewhere else);Prayer_SummonElemental(/FIRE)\n\r\
Example    : Spell_MageArmor;Spell_Shield; MASK=-RACE +Dwarf\n\r\
Description: \n\r\
Whenever someone enters the room or area, they \
will be granted the spells, skills listed.  The percentage given is optional, \
and will be the proficiency of the skill.  If a percentage is not given, the \
default is 100%.  When they leave, they lose the spells/skills.\n\r\
\n\r\
The parameters may also END with the key word MASK= followed by a mask.  This \
mask will select which kinds of mobs and players will be affected by this property. \
See ZAPPERMASKS for more information on zapper mask syntax.

PROP_HERESPELLCAST=\
Property   : Prop_HereSpellCast\n\r\
Targets    : Rooms\n\r\
Parameters : a list of properly named spells separated by semicolons\n\r\
Parameters : Spell names may optionally have parameters in parenthesis\n\r\
Parameters : The above parameters may be followed by an optional mask\n\r\
Example    : Spell_MageArmor;Spell_Shield\n\r\
Example    : 90%;Spell_Portal(Somewhere else);Prayer_SummonElemental(/FIRE)\n\r\
Example    : Spell_MageArmor;Spell_Shield; MASK=-RACE +Dwarf\n\r\
Description: \n\r\
So long as the room with this property is occupied, the occupants will \
be under the effect of the listed spells. The flag NOUNINVOKE can be substituted for a spell \
to make all the effects non-dispellable until the property no longer applies; \
use this flag with care! The flag LEVEL=[NUMBER] can also be substituted for a spell \
name to force all the listed effects be cast at a different level than default.\
The flag MAXTICKS=[NUMBER] can be used to shorted the length of spell casts. \n\r\
\n\r\
The parameters may also END with the key word MASK= followed by a mask.  This \
mask will select which kinds of mobs and players will be affected by this property. \
See ZAPPERMASKS for more information on zapper mask syntax.

PROP_HIDDEN=\
Property   : Prop_Hidden\n\r\
Targets    : MOB\n\r\
Parameters : (UNLOCATABLE)\n\r\
Example    : \n\r\
Example    : unlocatable\n\r\
Description: \n\r\
An alternative to setting a mob permanently hidden, this will keep the MOB hidden until the mob \
performs some act which would normally un-hide the mob.  After that, a period of time must \
elapse before the property reengages and makes the mob hidden again. \n\r\
\n\r\
Optional flags include: \n\r\
Unlocatable - makes the item unlocatable by spells, or an area unrecommended by the WHERE command.

PROP_ICEBOX=\
Property   : Prop_IceBox\n\r\
Targets    : Items,Rooms\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Any items placed in the room or container with this property will not spoil.  When removed, however,\
spoilage will resume.

PROP_IMPROVEGATHER=\
Property   : Prop_ImproveGather\n\r\
Targets    : Items,Rooms,Mobs,Areas\n\r\
Parameters : AMT=[MULTIPLIER] MASK=[ZAPPERMASK] SKILLS=ALL/[SKILLID LIST]\n\r\
Example    : amt=3 mask="-SEASON +SPRING" skills=Farming,Foraging\n\r\
Description: \n\r\
Alls the mob, item, or location to bestow the ability to multiply the yield \
from certain gathering skills.  SKILLS can be either a list of Ability IDs, \
or the word "ALL" to apply to all gathering skills.  A MASK would always apply \
to the person doing the skill, and the AMT is the integer number to multiply \
the yield by (or 0 to make it go away altogether!).\n\r\
\n\r\
<ZAP=improve>

PROP_INSTANTDEATH=\
Property   : Prop_InstantDeath\n\r\
Targets    : MOB, Item, Room, Area\n\r\
Parameters : zapper mask\n\r\
Example    : mask="-race +dwarf"\n\r\
Description: \n\r\
Will cause the death of anyone using the item, attacking the mob, or entering the room or area. If a mask \
if given, only those matching the mask are killed. \n\r\
\n\r\
<ZAP=spare>

PROP_INVISIBILITY=\
Property   : Prop_Invisibility\n\r\
Targets    : MOB\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
An alternative to setting a mob permanently invisible, this will keep the MOB invisible until the mob \
performs some act which would normally dispel the invisibility.  After that, a period of time must \
elapse before the property reengages and makes the mob invisible again.

PROP_ITEMBINDER=\
Property   : Prop_ItemBinder\n\r\
Targets    : Items\n\r\
Parameters : TO=CHARACTER/ACCOUNT/CLAN ON=PICKUP/EQUIP MESSAGE=[ZAPMSG]\n\r\
Example    : TO=CHARACTER ON=PICKUP MESSAGE="Bound -- you can't do that."\n\r\
Description: \n\r\
Allows an item to be bound when an event occurs to the person, account, or clan that \
either picks it up or first equips it.  Once bound, an item can only be picked up by \
that same player, account, or clan.  The zap message is also configureable.

PROP_ITEMNORUIN=\
Property   : Prop_ItemNoRuin\n\r\
Targets    : ITEM\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
When placed on an item, that item will be exempt from your systems loot policy.  The item will not be \
deleted, corrupted, ruined, or otherwise affected by the policy, regardless of your ini file settings.

PROP_ITEMSLOT=\
Property   : Prop_ItemSlot\n\r\
Targets    : ITEM\n\r\
Parameters : (NUM=[SLOTS COUNT]) (TYPE=[STRING]) (REMOVEABLE=[TRUE/FALSE]) ; [XML]\n\r\
Example    : NUM=4 TYPE=Gems REMOVEABLE=TRUE\n\r\
Description: \n\r\
When placed on an item, that item will have available slots into which other items, those \
with the Prop_ItemSlotFiller property, can be PUT using the PUT command. When this is done, \
the item with this property will gain the effect benefits of the other item in addition to \
its own.\n\r\
\n\r\
The NUM parameter determines how many slots are available.  The TYPE parameter must match \
the TYPE parameter from the Prop_ItemSlotFiller of the item being PUT.  The REMOVEABLE \
property sets whether the items in the slots may be removed.  See also Prop_ItemSlotFiller.

PROP_ITEMSLOTFILLER=\
Property   : Prop_ItemSlotFiller\n\r\
Targets    : ITEM\n\r\
Parameters : (NUM=[SLOTS COUNT]) (TYPE=[STRING]) (SKIPS=[ID,...])\n\r\
Example    : NUM=4 TYPE=Gems REMOVEABLE=TRUE\n\r\
Description: \n\r\
When placed on an item, that item will put able to be PUT, using the PUT command, into the \
slots provided on an item with the Prop_ItemSlot property.  When this is done, the item into \
which this item is PUT will gain all the effect benefits of this item.\n\r\
\n\r\
The NUM parameter determines how many slots this item takes up.  The TYPE parameter must match \
the TYPE parameter from the Prop_ItemSlot of the item being PUT into.  The SKIPS \
property is a comma delimited list of Ability IDs which should be ignored when determining which \
effects on this item should be applied to the slotted item.

PROP_ITEMTRANSPORTER=\
Property   : Prop_ItemTransporter\n\r\
Targets    : Rooms, MOBs, Items (Containers)\n\r\
Parameters : The transporter KEY\n\r\
Example    : KEYX123\n\r\
Description: \n\r\
Any room, items, or mob with this property becomes a medium for transportation to \
another mob, room, or item with the Prop_ItemTransReceiver property with the \
same key.  Any items dropped in the room, picked up or give to the mob, or placed \
inside the containers with this property will be instantly transported to another \
room/item/mob with the Prop_ItemTransReceiver property which has the exact same \
KEY parameter.  If there is more than one Prop_ItemTransReceiver found with the \
proper key, the destination will go randomly to one of the choices.

PROP_ITEMTRANSRECEIVER=\
Property   : Prop_ItemTransReceiver\n\r\
Targets    : Rooms, MOBs, Items (Containers)\n\r\
Parameters : The transporter KEY\n\r\
Example    : KEYX123\n\r\
Description: \n\r\
See Prop_ItemTransporter above.

PROP_LANGTRANSLATOR=\
Property   : Prop_LangTranslator\n\r\
Targets    : Mobs, Items, Rooms\n\r\
Parameters : nothing, a list of languages optionally preceded by a % chance\n\r\
Example    : \n\r\
Example    : 100% Dwarven 50% Elvish\n\r\
Example    : Dwarven Elvish\n\r\
Example    : 75% Dwarven Elvish\n\r\
Description: \n\r\
This is property allows the mob or item to translate any words spoken in the room \
in a language other than Common, into Common.  The mob or item will SAY the \
translation out loud.  The percentage chance given, which defaults to 100%, will \
be the chance that the mob or item will translate any given sentence.  

PROP_LANGUAGESPEAKER=\
Property   : Prop_LanguageSpeaker\n\r\
Targets    : Mobs, Items, Rooms, Exits, Areas\n\r\
Parameters : LANGUAGE=[LANGUAGE] (HOMEONLY=TRUE/FALSE) (NOMOBS=TRUE/FALSE)\n\r\
Parms(Cont):    (PLAYERS=TRUE/FALSE) (; [ZAPPER MASK])\n\r\
Example    : LANGUAGE=Dwarven\n\r\
Example    : LANGUAGE=Dwarven players=true ; -NAMES +BOB\n\r\
Example    : LANGUAGE=SignLanguage homeonly=true ; -NAMES +BOB\n\r\
Description: \n\r\
This is property forces the mobs who become affected by this property to speak \
the designated language until something else stops them.  On a mob, the affected \
mob will speak the language.  On a room, those who enter or are born in a room \
may be speak the language.  On an area, those who enter or are born in a room may \
speak the language. On an exits, those who enter the exit may speak the language. \
On an item, those who pick up the item may start speaking the language, while \
putting it down will stop them.\n\r\
\n\r\
The parameters affect who will start speaking the language.  By default, any non-player \
mob will become affected.  HOMEONLY will force only those whose starting room is \
in the area to speak.  NOMOBS will eliminate all non-players from consideration.  \
PLAYERS will allow players to be affected.  An optional zapper mask may follow a semicolon \
to add additional masks. \
<ZAP=disallow>

PROP_LIMITEDITEMS=\
Property   : Prop_LimitedItems\n\r\
Targets    : Items\n\r\
Parameters : The number of items with this name to maintain\n\r\
Example    : 3\n\r\
Description: \n\r\
This property will ensure that no more than the given number of items \
with the same name as the ones with this property will exist, either \
in the inventory of players, or in rooms.  It works by removing the \
excess items from the map when someone first enters a room with one \
of the excess items.  For this reason, limited items are automatically \
marked as non-locatable to block them from spells like Locate Object.\n\r\
\n\r\
This property will cause all player records to be loaded into memory \
at the end of the normal boot cycle, which will increase boot time \
and may cause a delay for the first person logging in.

PROP_LOCATIONBOUND=\
Property   : Prop_LocationBound\n\r\
Targets    : Items, Mobs\n\r\
Parameters : AREA/ROOM/[AREA NAME]/[ROOM ID]\n\r\
Example    : AREA\n\r\
Example    : ROOM\n\r\
Example    : My Happy Area\n\r\
Example    : My Area#12321\n\r\
Description: \n\r\
This property will ensure that the affected mob or item is unable to leave \
or be taken away from its home location, which is determined by the parameters. \
Use ROOM or AREA to prevent it from leaving whatever its current room or area \
is.  Using a specific area name or room id is more helpful, however, as it will \
not only prevent movement away from the given area or room, but will whisk the \
mob or item BACK to its home if it is ever able to be removed for some reason \
ANYWAY.

PROP_LOTFORSALE=\
Property   : Prop_LotForSale\n\r\
Targets    : Room\n\r\
Parameters : (RENTAL) Price of the first room on the lot\n\r\
Example    : 1000000\n\r\
Example    : Bob/100000\n\r\
Example    : GRID 1000000\n\r\
Description: \n\r\
Makes this room and future adjacent rooms available for purchase as  \
a single lot. This property is an extension of the Prop_RoomForSale property, and \
includes all of its capabilities, PLUS, when this room is sold, \
adjacent lots will automatically be created, \
allowing the player to expand his or her property.  When the property \
is sold, or falls out of a players possession, the system will \
automatically retract the created rooms. The word rental followed by a space may \
preceed the price to make the price of the property be charged every month \
automatically out of a Bankers account.  Failure to make rent returns the property \
to sellable status.  The word GRID followed by a space may preceed the price \
to make new rooms automatically link to other rooms via demolishable walls.\n\r\
\n\r\
When property is sold, it will be listed as the owner with a slash and the price.  \
Entering this sort of parameter directly is the quick way to give players or clans property. \n\r\
\n\r\
This property is similar to prop_lotsforsale, except that the players don't have to purchase each room.\n\r\
\n\r\
See also Prop_ReqCapacity for the means to set limits on players building abilities on \
their property.

PROP_LOTSFORSALE=\
Property   : Prop_LotsForSale\n\r\
Targets    : Room\n\r\
Parameters : ([OWNER NAME]/)(RENTAL) (GRID) Price of each room on the lot\n\r\
Example    : 1000000\n\r\
Example    : GRID 1000000\n\r\
Example    : Bob/100000\n\r\
Example    : Bob/ RENTAL 100000\n\r\
Description: \n\r\
Makes this room and future adjacent rooms available for purchase.  \
This property is an extension of the Prop_RoomForSale property, and \
includes all of its capabilities, PLUS, when this room is sold, \
adjacent lots will automatically be created and put up for sale, \
allowing the player to expand his or her property.  When the properties \
are sold, or fall back out of any players possession, the system will \
automatically retract the created rooms. The word RENTAL followed by a space may \
preceed the price to make the price of the property be charged every month \
automatically out of a Bankers account.  Failure to make rent returns the property \
to sellable status.  The word GRID followed by a space may preceed the price \
to make new rooms automatically link to other rooms via demolishable walls.\n\r\
\n\r\
When property is sold, it will be listed as the owner with a slash and the price.  \
Entering this sort of parameter directly is the quick way to give players or clans property. \n\r\
\n\r\
This property is similar to prop_lotforsale, except that the players must buy each room.\n\r\
\n\r\
See also Prop_ReqCapacity for the means to set limits on players building abilities on \
their property.

PROP_MAGICFREEDOM=\
Property   : Prop_MagicFreedom\n\r\
Targets    : Room\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Cancels all magical effects in the room.  If placed on a mob, will cancel magical \
effects in the same room as the mob. 

PROP_MOBEMOTER=\
Property   : Prop_MOBEmoter\n\r\
Targets    : Room, Area, Item, Mob, Exit\n\r\
Parameters : Same as Emoter Behavior\n\r\
Parameters : Same as Emoter Behavior\n\r\
Description: \n\r\
This property is simply an ability/effect encapsulation of the Emoter behavior.  Please \
do AHELP Emoter for information on the proper use and parameters of this property.

PROP_MODEXPERIENCE=\
Property   : Prop_ModExperience\n\r\
Targets    : MOBs, Items, Rooms, Areas\n\r\
Parameters : (=,+,-,*,/)[NUMBER](%)(;[MASK])\n\r\
Example    : 500\n\r\
Example    : 500;-race +orc\n\r\
Example    : =10%\n\r\
Example    : +20% SELF\n\r\
Example    : +20%;-class +Fighter +Mage -Race +Elf\n\r\
Example    : *2\n\r\
Description: \n\r\
Allows the archon to modify the amount of experience gained by each player for \
slaying the mob. If placed on a mob, the experience will be granted according to \
the parm, so long as the player meets the mask parameters (optional). \
The property will apply to the mob with this property him or herself only if the \
word SELF is included in the first parameters. \
If placed on an item, the experience will be granted to the wearer (or wielder \
or holder), so long as the mob killed meets the mask (optional).  \
If placed on a Room or Area, the experience will be greated to another who meets \
the (optional) mask requirements.\
If no mask is given, the experience is always granted. Valid masks are:\n\r\
<ZAP=disallow>

PROP_MODFACTION=\
Property   : Prop_ModFaction\n\r\
Targets    : MOBs, Items, Rooms, Areas\n\r\
Parameters : (+/-[FACTION ID]:)(=,+,-,*,/)[NUMBER](%)(;[MASK])\n\r\
Example    : alignment.ini: 500\n\r\
Example    : alignment.ini: 500;-race +orc\n\r\
Example    : =10%\n\r\
Example    : examples/reputation.ini: +20%\n\r\
Example    : +20%;-class +Fighter +Mage -Race +Elf\n\r\
Example    : +alignment.ini:*2\n\r\
Description: \n\r\
Allows the archon to modify the amount of faction gained or lost by each player for \
slaying the mob. If placed on a mob, the faction will be granted according to \
the parm, so long as the player meets the mask parameters (optional) and so long \
as the faction being changed is the one specified in the parameters (also optional). \
The faction id is left empty to specify affecting all factions.  The faction id can be \
preceeded by a + to only affect faction gains, - to only affect faction losses, or neither \
to affect both.  You can also use REACTION as a faction ID to only apply to factions that \
have reactions defined.  \
If this property placed on an item, the faction will be altered for the wearer (or wielder \
or holder), so long as the mob killed meets the mask (optional).  \
If placed on a Room or Area, the faction will be changed for one who meets \
the (optional) mask requirements.  \
If no faction id is given, all factions are changed.  \
If no mask is given, the faction is always granted. Valid masks are:\n\r\
<ZAP=disallow>

PROP_MOVERESTRICTOR=\
Property   : Prop_MoveRestrictor\n\r\
Targets    : MOBs, Rideables\n\r\
Parameters : (CHANCE=[NUMBER 0-100])\n\r\
Parameters : (NOLOCALES="[LOCALE],...") (ONLYLOCALES="[LOCALE],...")\n\r\
Parameters : (NODOMAINS="[DOMAIN],...") (ONLYDOMAINS="[DOMAIN],...")\n\r\
Parameters : (SEARCH="[STR]") (ISEARCH="[STR]") (MSEARCH="[STR]") \n\r\
Parameters : (MESSAGE="<S-NAME> [PREDICATE]") (PUBLIC=TRUE/FALSE)\n\r\
Parameters : (DISMOUNT=[TRUE/FALSE]) (CAST="[ABILITY ID];..."\n\r\
Example    : nolocales="WOODS,SWAMP" message="<S-NAME> will not enter!" public=true\n\r\
Description: \n\r\
According to the given percentage CHANCE (default 100%), this property \
restricts the ability of a mob or rideable to enter rooms of a particular spec. \
NODOMAINS can list the types of rooms that cannot be entered, whereas ONLYDOMAINS \
lists the types of rooms that can be entered, restricting all others.  Both are \
comma-delmited lists.  Indoor DOMAINS include: STONE, WOODEN, CAVE, MAGIC, and METAL.  \
Outdoor DOMAINS include: CITY, WOODS, ROCKY, PLAINS, UNDERWATER, AIR, WATERSURFACE, \
JUNGLE, SWAMP, DESERT, HILLS, MOUNTAINS, SPACEPORT, SEAPORT.\n\r\
\n\r\
NOLOCALES can list the types of rooms that cannot be entered, whereas ONLYLOCALES \
lists the types of rooms that can be entered, restricting all others.  Both are \
comma-delmited lists.  See LIST LOCALES for a list of valid room locale ids.\n\r\
\n\r\
The SEARCH string allows room restricting based on a key phrase in the potential room \
title or description.  MSEARCH restricts based on mobs in the potential room, and \
ISEARCH based on items in the potential room. \n\r\
\n\r\
The MESSAGE parameter allows you to set the string that the person trying to move into \
the room sees when it is restricted.  Use <S-NAME> as a substitute for the persons name. \
The PUBLIC parameter decides whether everyone sees the message (true), or only the person \
trying to move (false).\n\r\
\n\r\
The DISMOUNT will automatically dismount any riders on the affected.\n\r\
\n\r\
The CAST parameter allows you to cause a spell to be cast upon all the properties mover, \
or upon all the riders, when they try to enter a room that is restricted.

PROP_NARROWLEDGE=\
Property   : Prop_NarrowLedge\n\r\
Targets    : Rooms, Exits\n\r\
Parameters : check=[%] name=[NAME OF THE LEDGE]\n\r\
Example    : check=16 name="the narrow ledge"\n\r\
Example    : check=25 name="a tightrope"\n\r\
Description: \n\r\
Whenever a player enters or exits the room or exit with this property, \
that player is in great danger.  If the player fails to roll beneath their \
Dexterity on a roll from 1-the "check" parameter, the player will fall to \
their death.  The check parameter can be made smaller to give those with \
less dexterity a better survival chance, or made higher to make it more \
difficult to survive.

PROP_NEWDEATHMSG=\
Property   : Prop_NewDeathMsg\n\r\
Targets    : MOB\n\r\
Parameters : the new death string\n\r\
Example    : \n\r\
Description: \n\r\
Makes the mob with this property emote a different death string than the normal \
one.

PROP_NOCHANNEL=\
Property   : Prop_NoChannel\n\r\
Targets    : Room, Area, MOB\n\r\
Parameters : Semicolon delimited list of channel names and or flags QUIET; SENDOK\n\r\
Example    : SENDOK;GOSSIP;CHAT\n\r\
Example    : GOSSIP;QUIET\n\r\
Description: \n\r\
Without any parameters, this property will cancel all channel message sending from \
the room, or by the mob/player with the property.  You can limit the channels that \
are blocked by naming them in the parameters, separating them with semicolons.  You \
can also have the property block reception of channel messages using the QUIET flag. \
Lastly, you can override the no-channel-sending using the SENDOK flag, thereby allowing \
channel messages to be sent.

PROP_NOCHARM=\
Property   : Prop_NoCharm\n\r\
Targets    : MOBS, Room, Area\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Disallows the casting of charm like affects in the area, or against the target mob.

PROP_NOCRAFTABILITY=\
Property   : Prop_NoCraftability\n\r\
Targets    : ITEMS\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Disallows the item with this property from being learned as a recipe for crafting, \
even if otherwise qualified.

PROP_NODAMAGE=\
Property   : Prop_NoDamage\n\r\
Targets    : Mobs, Weapons\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Makes a weapon or mob incapable of doing any real damage.

PROP_NOORDERING=\
Property   : Prop_NoOrdering\n\r\
Targets    : MOBs, Room, Area\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Disallows ordering by non-admins in the area, or against the target mob.

PROP_NOPKILL=\
Property   : Prop_NoPKill\n\r\
Targets    : Room, Area\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Cancels all player killing in the room or area. 

PROP_NOPURGE=\
Property   : Prop_NoPurge\n\r\
Targets    : Rooms, Containers, Items\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Prevents items in the room from being destroyed as refuse over time.  When \
placed on an item, this property makes the item immune to "garbage collection" \
regardless of where in the world it is.

PROP_NORECALL=\
Property   : Prop_NoRecall\n\r\
Targets    : Room, Area, Items\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Disallows recalling in the room.  If placed on items, the item must be possessed by the \
mob or player trying to recall for prevention to work.

PROP_NOSUMMON=\
Property   : Prop_NoSummon\n\r\
Targets    : Room, Area\n\r\
Parameters : (ALLOWNONAGGR)\n\r\
Example    : \n\r\
Description: \n\r\
Disallows summoning of creatures or people INTO the affected place. \
The optional ALLOWNONAGGR parm may be added to disallow summoning \
only of aggressive mobs.

PROP_NOTELEPORT=\
Property   : Prop_NoTeleport\n\r\
Targets    : Room, Area\n\r\
Parameters : (EXCEPTIONS=[ROOMID/AREANAME,etc..]\n\r\
Example    : \n\r\
Example    : exceptions="area name#12,other area name"\n\r\
Description: \n\r\
Disallows the casting of gate, teleport, portal, plantpass, and other \
spells INTO this area.  If this is placed on an area, specific room \
or area exceptions may be given.

PROP_NOTELEPORTOUT=\
Property   : Prop_NoTeleportOut\n\r\
Targets    : Room, Area\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Disallows the casting of gate, teleport, portal, plantpass, and other \
spells OUT OF this area.

PROP_NOTELLING=\
Property   : Prop_NoTelling\n\r\
Targets    : Room, Area, Mobs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Cancels all tell message sending in or to the room, area, or mob.  \
You can also add this to player mobs as punishment or to shut them up. \
Admins are exempt from the restrictions imposed.

PROP_OPENCOMMAND=\
Property   : Prop_OpenCommand\n\r\
Targets    : Containers, Exits\n\r\
Parameters : [COMMAND WORD] ([PARMS...];...\n\r\
Example    : twist knob;tw knob;twi knob\n\r\
Example    : smack botto*\n\r\
Description: \n\r\
When applied to a locked container or exit, this property will force \
the affected openable to unlock and open when the command phrase is entered \
by the user in its presence.  The command word must match exactly, and the \
command entered must otherwise be completely invalid.  PARMS arguments must also \
match exactly, although any PARM arg may end with * to use a starting string wildcard. \
A PARM argument may also end with ** to match the rest of the users entered command string.

PROP_OPENPASSWORD=\
Property   : Prop_OpenPassword\n\r\
Targets    : Containers, Exits\n\r\
Parameters : ([LANGUAGEID];)[PASSWORD/PASSPHRASE]\n\r\
Example    : open sesame\n\r\
Example    : Orcish;open sesame\n\r\
Description: \n\r\
When applied to a locked container or exit, this property will force \
the affected openable to unlock and open when the magic word specified \
in the parameter is spoken in its presence.  A language and a semicolon \
may be optionally given to require that a particular language is being spoken.

PROP_OUTFITCONTAINER=\
Property   : Prop_OutfitContainer\n\r\
Targets    : Containers\n\r\
Parameters : ;[XML TAGS...]\n\r\
Description: \n\r\
When applied to a container, this property will allow the container to remember \
which things were put into it by a player.  Then, whenever the player attempts \
to wear/hold/wield the container, has the container has items/armor/weapons inside, \
the player will actually wear the containing items instead.  The automatic wearing of \
the contained items will automatically remove conflicting items as normal. Later, when the \
remembered items are removed, they will automatically be put back into the container that \
remembers them.

PROP_PEACEMAKER=\
Property   : Prop_PeaceMaker\n\r\
Targets    : Rooms, Areas, MOBs\n\r\
Parameters : optional list of mob statements, room emotes, semicolon delimited\n\r\
Example    : \n\r\
Example    : No Fighting Here!;Make Love, not War!;You should not do that.\n\r\
Description: \n\r\
Cancels any fighting in the room.

PROP_PRACTICEDUMMY=\
Property   : Prop_PracticeDummy\n\r\
Targets    : Mobs\n\r\
Parameters : (KILLABLE)\n\r\
Example    : \n\r\
Example    : KILLABLE\n\r\
Description: \n\r\
Prevents a mob from fighting back.  If the KILLABLE parameter is NOT included, \
the mob will also never run out of hit points or be missed in combat.

PROP_PRIVATEPROPERTY=\
Property   : Prop_PrivateProperty\n\r\
Targets    : Items\n\r\
Parameters : OWNER="[NAME]" (PRICE=[price]) (EXPIRESEC=[SECONDS])\n\r\
Example    : owner="bob" expiresec=60\n\r\
Description: \n\r\
Marks the item as belonging to a particular person or clan. \
Items so marked can only be sold by that person, an associate, or clan member. \
PRICE does nothing. \
EXPIRESEC can be set to make this property temporary, so that an item \
dropped becomes "unowned" once the owner is gone for the number of seconds given.

PROP_REQALIGNMENTS=\
Property   : Prop_ReqAlignments\n\r\
Targets    : Rooms, Areas, Exits\n\r\
Parameters : alignment masks listed below\n\r\
Example    : -all +good\n\r\
Description: (DEPRECATED -- See PropReqEntry)\n\r\
Creates alignment restrictions for entering a room.  Followers will be allowed \
unless explicitly disallowed.  Valid parameters include:  \n\r\
nosneak (disallow sneaking past the requirement)\n\r\
-all (disallow all alignments)  \n\r\
nofol (disallow followers of appropriate alignment)  \n\r\
+evil +good +neutral (create exceptions to -all)  \n\r\
-evil -good -neutral (disallow only listed alignments)  

PROP_REQCAPACITY=\
Property   : Prop_ReqCapacity\n\r\
Targets    : Areas, Room\n\r\
Parameters : PEOPLE=[MAX] PLAYERS=[MAX] MOBS=[MAX] ITEMS=[MAX] WEIGHT=[MAX] INDOOR=[T/F]\n\r\
Parameters : CONTAINERSOK=[T/F] ROOMS=[MAX]\n\r\
Example    : people=2\n\r\
Example    : players=3 mobs=2 indoor=true\n\r\
Example    : weight=2000 items=10\n\r\
Description: \n\r\
Creates a capacity limit of one or more types for the room or area with this affect. \
The ITEMS, or WEIGHT parameters may be used to limit the number \
of items, or maximum weight respectively.  The CONTAINERSOK parameter will create an \
exception for putting items in containers (but not for dropping the containers themselves). \
The PEOPLE parameter lets you limit the total \
number of players and/or mobs.  Otherwise, the PLAYERS or MOBS can be used to limit the \
number of players or non-player mobs respectively.  The optional INDOOR flag only matters \
if this property is added to an area; it makes the property only enforce itself on indoor \
rooms types.\n\r\
\n\r\
If no parameters at all are given, a PEOPLE capacity of 2 is assumed.\n\r\
\n\r\
When this property is on an entry room with Prop_LotsForSale or Prop_LotForSale, \
then this property will be automatically propogated to each new room created.  Also, in this \
case, and the optional parameter ROOMS can be specified to limit the maximum number of \
contiguous new rooms that can be generated. 

PROP_REQCLASSES=\
Property   : Prop_ReqClasses\n\r\
Targets    : Rooms, Areas, Exits\n\r\
Parameters : class masks listed below\n\r\
Example    : -all +thief\n\r\
Description: (DEPRECATED -- See PropReqEntry)\n\r\
Creates class restrictions for entering a room.  Followers will be allowed unless \
explicitly disallowed.  Valid parameters include: \n\r\
nosneak (disallow sneaking past the requirement)\n\r\
-all (disallow all classes)  \n\r\
nofol (disallow followers of appropriate class)  \n\r\
+thief +mage +bard (create exceptions to -all)  \n\r\
-thief -mage -bard (disallow only listed classes)  

PROP_REQENTRY=\
Property   : Prop_ReqEntry\n\r\
Targets    : Rooms, Areas, Exits, Portals\n\r\
Parameters : (nosneak) (nofollow) ("message=my message") mask\n\r\
Example    : -race +elf\n\r\
Example    : nosneak -race +elf\n\r\
Example    : "message=Elves Only in there!" nofollow -race +elf\n\r\
Description: \n\r\
Creates restrictions for entering a room.  Followers will be allowed unless \
explicitly disallowed.  Valid parameters include: \n\r\
nosneak (disallow sneaking past the requirement)\n\r\
nofol (disallow followers)  \n\r\
"message= ... " (override the default no-entry message. \n\r\
<ZAP=disallow> 

PROP_REQHEIGHT=\
Property   : Prop_ReqHeight\n\r\
Targets    : Areas, Room, Exit\n\r\
Parameters : a maximum height to enter\n\r\
Example    : 12\n\r\
Description: \n\r\
Creates a maximum height in order to enter a room.  Similar to Prop_Crawlspace.

PROP_REQLEVELS=\
Property   : Prop_ReqLevels\n\r\
Targets    : Room, Areas, Exits\n\r\
Parameters : ==, <=, >=, >, or < followed by a level number\n\r\
Example    : <=10 >=5\n\r\
Description: \n\r\
Creates level restrictions for entering a room.  Followers will be allowed unless \
the NOFOL parameter appears.  The parameter should describe only the allowed levels. \
Multiple criteria are allowed. The term "NOSNEAK" may be added to the parameter \
to disallow sneaking past your criteria.

PROP_REQNOMOB=\
Property   : Prop_ReqNoMOB\n\r\
Targets    : Room, Areas, Exit\n\r\
Parameters : optional nosneak parameter\n\r\
Example    : \n\r\
Example    : nosneak\n\r\
Description: \n\r\
Prevents non-player mobs without followers from entering the room. \
The term "NOSNEAK" may be added to the parameters \
to disallow sneaking past your criteria.

PROP_REQPKILL=\
Property   : Prop_ReqPKill\n\r\
Targets    : Room, Exit, Area\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Allows access only to those players who have their playerkill flag set.

PROP_REQRACES=\
Property   : Prop_ReqRaces\n\r\
Targets    : Rooms, Areas, Exits\n\r\
Parameters : room masks listed below\n\r\
Example    : -all +elf\n\r\
Description: (DEPRECATED -- See PropReqEntry)\n\r\
Creates race restrictions for entering a room.  Followers will be allowed unless \
explicitly disallowed.  Valid parameters include: \n\r\
nosneak (disallow sneaking past the requirement)\n\r\
-all (disallow all races)  \n\r\
nofol (disallow followers of appropriate alignment)  \n\r\
+elf +half +human (create exceptions to -all)  \n\r\
-elf -half -human (disallow only listed races)  

PROP_REQSTAT=\
Property   : Prop_ReqStat\n\r\
Targets    : Rooms, Areas, Exits, Portals\n\r\
Parameters : mob character stat expressions as shown in example\n\r\
Example    : strength<10 intelligence==5 wisdom>=3\n\r\
Description: \n\r\
Creates restrictions for entering a room.  Players must pass every \
expression test in order to enter.  Valid parameters include: \n\r\
nosneak (disallow sneaking past the requirement)\n\r\
nofol (disallow followers)\n\r\
STRENGTH, INTELLIGENCE, WISDOM, CONSTITUTION, CHARISMA, DEXTERITY, etc..

PROP_REQTATTOO=\
Property   : Prop_ReqTattoo\n\r\
Targets    : Rooms, Areas, Exits, Items\n\r\
Parameters : optional msg; tattoo masks listed below\n\r\
Example    : -all +manlymen\n\r\
Example    : You can't go here!;-all +manlymen\n\r\
Description: \n\r\
Creates tattoo restrictions for entering a roomor possessing an item.  Followers \
will be allowed unless explicitly disallowed.  See the help on Tattoos. \
Understood masks include:\n\r\
nosneak (disallow sneaking past the requirement)\n\r\
nofol (disallow followers of appropriate alignment)  \n\r\
-all (disallow unless has one of the following +tattoos) \n\r\
+all (allow unless has any of the followng -tattoos) \n\r\
+none (must have all +tatoos, and lack all -tattoos) \n\r\
+TATTOONAME (must have tattoo) \n\r\
-TATTOONAME (must not have tattoo)\n\r\
Prefix TATOONAME name with ACCOUNT(space) to use account-based tattoos. 

PROP_REROLLSTATS=\
Property   : Prop_ReRollStats\n\r\
Targets    : MOB\n\r\
Parameters : (BONUSPOINTS=[NUM]) (PICKCLASS=TRUE/FALSE)\n\r\
Example    : \n\r\
Example    : BONUSPOINTS=5 PICKCLASS=TRUE\n\r\
Description: \n\r\
Allows a player a one-time opportunity to redesignate their stats, \
completely from scratch, and potentially re-pick their class.

PROP_RESISTANCE=\
Property   : Prop_Resistance\n\r\
Targets    : MOB\n\r\
Parameters : see Prop_HaveResister\n\r\
Example    : see Prop_HaveResister\n\r\
Description: \n\r\
Gives a mob natural resistances and immunities. See Prop_HaveResister for more \
information. 

PROP_RESTRICTSKILLS=\
Property   : Prop_RestrictSkills\n\r\
Targets    : Room, Area, MOB, Item\n\r\
Parameters : SKILLS="[ABILITYID,...]" MESSAGE="[STRING]"\n\r\
Parameters : ONLYROOMS="[DOMAIN,...]" NEVERROOMS="[DOMAIN,...]"\n\r\
Example    : SKILLS="Spell_Sleep,Skill_Recall" MESSAGE="No!" ONLYROOMS="UNDERWATER,AIR"\n\r\
Description: \n\r\
Cancels the effects of the listed spells/skills, and can be restricted by location.  \
The only required parameter is SKILLS, which is a comma-delimited list of Ability IDs. \
Optional parameters includes MESSAGE, to change the skill users error message, ONLYROOMS \
to restrict the skill everywhere except the comma delimited list of DOMAIN strings, and \
NEVERROOMS to restrict the skill only in the comma delimited list of DOMAIN strings.  DOMAINS \
include: CITY, WOODS, ROCKY, PLAINS, UNDERWATER, AIR, WATERSURFACE, JUNGLE, SWAMP, DESERT, \
HILLS, MOUNTAINS, SPACEPORT, SEAPORT, STONE, WOODEN, CAVE, MAGIC, UNDERWATER, AIR, WATERSURFACE, \
METAL.   When this property is on a mob, it only affects the mob.  When on an item, it only affects \
the owner of the item.  If you want to limit spells/skills used AGAINST a mob, look at immunities.

PROP_RESTRICTSPELLS=\
Property   : Prop_RestrictSpells\n\r\
Targets    : Room, Area\n\r\
Parameters : proper spell names separated by semicolons\n\r\
Example    : Spell_Sleep;Skill_Recall;\n\r\
Description: \n\r\
Cancels the effects of the listed spells when cast on or in the room. 

PROP_RETAINABLE=\
Property   : Prop_Retainable\n\r\
Targets    : Mobs\n\r\
Parameters : The value of the mob to shopkeepers\n\r\
Parameters : Price of the mob per period;number of days per period\n\r\
Example    : 100000\n\r\
Example    : 100;10\n\r\
Description: \n\r\
This property serves many a purpose: to allow you to set a value to mobs \
when being sold as pets by shopkeepers.  It also allows you to create mobs \
which will be saved in the database when the system is shut down, so long \
as the mob has this property, and the mob is presently on someone's personal \
home, such as a Prop_RoomForSale room.  The second parameter following the \
semicolon, if present, will also make the mob automatically draw money from \
the property owners bank account periodically.  The second parameter refers \
to the number of mud-days between each pay period.  If a pay period passes and \
the mob can not find a bank account of the owners from which to get paid, or \
has not been placed on someone's personal property as described above, the mob \
will quit and disappear.

PROP_RIDEADJUSTER=\
Property   : Prop_RideAdjuster\n\r\
Targets    : Items and Mobs\n\r\
Parameters : see Prop_HaveAdjuster\n\r\
Example    : see Prop_HaveAdjuster\n\r\
Description: \n\r\
Whenever the item or mob having this property is mounted or ridden, the \
statistics of the rider will be adjusted as described in the parameters.  \
Dismounting will remove the effects. See Prop_HaveAdjuster for more information \
on the valid parameters for this property. 

PROP_RIDEENABLER=\
Property   : Prop_RideEnabler\n\r\
Targets    : Items and MOBS\n\r\
Parameters : a list of properly named spells separated by semicolons\n\r\
Parameters : Spell names may optionally have parameters in parenthesis\n\r\
Parameters : The above parameters may be followed by an optional mask\n\r\
Example    : Spell_MageArmor;Spell_Shield\n\r\
Example    : 90%;Spell_Portal(Somewhere else);Prayer_SummonElemental(/FIRE)\n\r\
Example    : Spell_MageArmor;Spell_Shield; MASK=-RACE +Dwarf\n\r\
Description: \n\r\
So long as the item with this property is being mounted or ridden, the owner \
will be granted the spells, skills listed.  The percentage given is optional, \
and will be the proficiency of the skill.  If a percentage is not given, the \
default is 100%.  \n\r\
\n\r\
The parameters may also END with the key word MASK= followed by a mask.  This \
mask will select which kinds of mobs and players will be affected by this property. \
See ZAPPERMASKS for more information on zapper mask syntax.

PROP_RIDERESISTER=\
Property   : Prop_RideResister\n\r\
Targets    : Items and Mobs\n\r\
Parameters : see Prop_HaveResister\n\r\
Example    : see Prop_HaveResister\n\r\
Description: \n\r\
Whenever the item having this property is mounted or ridden, the rider gains \
certain resistances and immunities described in the parameters.  When exited, \
the resistances and immunities are also cancelled.  See Prop_HaveResister for \
more information on valid parameters for this property. 

PROP_RIDESPELLCAST=\
Property   : Prop_RideSpellCast\n\r\
Targets    : Items and MOBS\n\r\
Parameters : a list of properly named spells separated by semicolons\n\r\
Parameters : Spell names may optionally have parameters in parenthesis\n\r\
Parameters : The above parameters may be followed by an optional mask\n\r\
Example    : Spell_MageArmor;Spell_Shield\n\r\
Example    : 90%;Spell_Portal(Somewhere else);Prayer_SummonElemental(/FIRE)\n\r\
Example    : Spell_MageArmor;Spell_Shield; MASK=-RACE +Dwarf\n\r\
Description: \n\r\
So long as the item with this property is being mounted or ridden, the owner \
will be under the effect of the listed spells. The flag NOUNINVOKE can be substituted for a spell \
to make all the effects non-dispellable until the property no longer applies; \
use this flag with care! The flag LEVEL=[NUMBER] can also be substituted for a spell \
name to force all the listed effects be cast at a different level than default.\
The flag MAXTICKS=[NUMBER] can be used to shorted the length of spell casts. \n\r\
\n\r\
The parameters may also END with the key word MASK= followed by a mask.  This \
mask will select which kinds of mobs and players will be affected by this property. \
See ZAPPERMASKS for more information on zapper mask syntax.

PROP_RIDEZAPPER=\
Property   : Prop_RideZapper\n\r\
Targets    : Items and Mobs\n\r\
Parameters : masking parameters described below, optional zap message\n\r\
Example    : -class +mage -race +elf -evil\n\r\
Example    : MESSAGE="<S-NAME> jump(s) off of <O-NAME>!" -class +mage\n\r\
Description: \n\r\
Whenever the rider of the item or mob with this property mounts the \
item, they will be zapped unless it is allowed by the listed parameters.  \n\r\
An optional MESSAGE parameter can define what is seen when the zap occurs. \
Also optionally, the parameters can start with the word ACTUAL to change \
zapping behavior to look at actual values instead of perceived values \
(this about a class check applied to a Charlatan.) \
Valid masking parameters include:  \n\r\
<ZAP=disallow>

PROP_ROOMDARK=\
Property   : Prop_RoomDark\n\r\
Targets    : Areas, Room\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Makes a room dark, so that you need a light to see it. 

PROP_ROOMFORSALE=\
Property   : Prop_RoomForSale\n\r\
Targets    : Room\n\r\
Parameters : (RENTAL) Price of the room\n\r\
Example    : 1000000\n\r\
Example    : Bob/1000000\n\r\
Description: \n\r\
Makes this room available for purchase by a player.  The room will be \
automatically listed in the stock of any ShopKeeper in the SAME AREA who \
is designated a LandSeller, or any shopkeeper who has the proper StdTitle \
item in its selling inventory.  The system will automatically maintain the \
integrity of any items left in the room, including restoring them on reboot.  \
After a room is sold, the player need only enter "LOOK ID" to see the rooms \
ID for the purposes of identifying his or her lot in the future.  The title received \
for purchasing a room may be GIVEn or SELLed to change possession of the property. \
The word rental followed by a space may \
preceed the price to make the price of the property be charged every month \
automatically out of a Bankers account.  Failure to make rent returns the property \
to sellable status.\n\r\
\n\r\
When property is sold, it will be listed as the owner with a slash and the price.  \
Entering this sort of parameter directly is the quick way to give players or clans property.\n\r\
\n\r\
See also Prop_ReqCapacity for the means to set limits on players building abilities on \
their property.

PROP_ROOMLIT=\
Property   : Prop_RoomLit\n\r\
Targets    : Areas, Room\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Makes a room lit, even at night. 

PROP_ROOMPLUSFORSALE=\
Property   : Prop_RoomsPlusForSale\n\r\
Targets    : Room\n\r\
Parameters : ([OWNER NAME]/)(RENTAL) (GRID) Price of the first room\n\r\
Example    : 1000000\n\r\
Example    : GRID 1000000\n\r\
Example    : The Bob Clan/1000000\n\r\
Example    : The Bob Clan/RENTAL 1000000\n\r\
Description: \n\r\
Makes this room available for purchase by a player.  If you have more than one \
room for sale, they MUST be separated by at least one room which is \
not for sale, otherwise both groups will be considered one.  This property is \
identicla to Prop_RoomForSale or Prop_RoomsForSale, except that the building \
skills are permitted to add new rooms to it. See Prop_RoomForSale for more \
information on sold rooms and the rental flag.  \n\r\
\n\r\
When property is sold, it will be listed as the owner with a slash and the price.  \
Entering this sort of parameter directly is the quick way to give players or clans property.\n\r\
\n\r\
See also Prop_ReqCapacity for the means to set limits on players building abilities on \
their property.

PROP_ROOMSFORSALE=\
Property   : Prop_RoomsForSale\n\r\
Targets    : Room\n\r\
Parameters : (RENTAL) Price of the group of rooms\n\r\
Example    : 1000000\n\r\
Example    : The Bob Clan/1000000\n\r\
Description: \n\r\
Makes this room part of a group of rooms available for purchase by a player.  \
The rooms will be sold as a group by the shopkeeper.  If you have more than one \
group of rooms for sale, they MUST be separated by at least one room which is \
not for sale, otherwise both groups will be considered one.  See \
Prop_RoomForSale for more information on sold rooms and the rental flag.  \n\r\
\n\r\
When property is sold, it will be listed as the owner with a slash and the price.  \
Entering this sort of parameter directly is the quick way to give players or clans property.\n\r\
\n\r\
See also Prop_ReqCapacity for the means to set limits on players building abilities on \
their property.

PROP_ROOMUNMAPPABLE=\
Property   : Prop_RoomUnmappable\n\r\
Targets    : Areas, Room\n\r\
Parameters : (MAPOK) (NOEXPLORE)\n\r\
Example    : \n\r\
Example    : NOEXPLORE\n\r\
Description: \n\r\
Makes a room unable to be mapped, explored, or seen with regional awareness. \
Turning off exploration requires the NOEXPLORE parameter.  MAPOK parameter \
disables the unmappable aspect.

PROP_ROOMVIEW=\
Property   : Prop_RoomView\n\r\
Targets    : Exits, Rooms, Items\n\r\
Parameters : Room ID of the room to show\n\r\
Example    : Midgaard#3001\n\r\
Description: \n\r\
Allows players looking at the room or exit to actually SEE the room \
description specified in the parameter.  Useful for high-up views of \
the countryside.

PROP_ROOMWATCH=\
Property   : Prop_RoomWatch\n\r\
Targets    : Rooms\n\r\
Parameters : Room IDs of the rooms that may watch here or var defs ; delimited\n\r\
Example    : Midgaard#3001;Midgaard#3002;Midgaard#3012\n\r\
Example    : Midgaard#3001;prefix=Throw the window you see ;Midgaard#3012\n\r\
Description: \n\r\
Allows players in one of the listed rooms to see everything going on in \
the host room as if they were there.  They will be unable to interact \
with the things they see (LOOKing at, or similar), but can at least \
witness them.  The parameters are the list of rooms, though you can also \
use prefix=message to define a string to show before the remote messages.

PROP_SAFEPET=\
Property   : Prop_SafePet\n\r\
Targets    : MOB\n\r\
Parameters : MSG=[NEW DISPLAY MESSAGE]\n\r\
Example    : MSG="<S-NAME> is forbidden to harm <T-NAMESELF>."\n\r\
Description: \n\r\
Makes the mob with this property completely unattackable.  The default message \
can be changed with parameters.

PROP_SCRAPEXPLODE=\
Property   : PROP_SCRAPEXPLODE\n\r\
Targets    : Items\n\r\
Parameters : \n\r\
Description: \n\r\
Makes an item explode when scrapped.

PROP_SMELL=\
Property   : Prop_Smell\n\r\
Targets    : MOBS, Items, Rooms\n\r\
Parameters : (TICKS=[NUM]) (CHANCE=[NUM]) (EMOTE) (BROADCAST) text(;...)\n\r\
Example    : <T-NAME> smells flowery!\n\r\
Example    : <T-NAME> smells awful!;<T-NAME> smells BAD!\n\r\
Example    : CHANCE=50 <T-NAME> smells awful!;CHANCE=10 <T-NAME> smells BAD!\n\r\
Example    : EMOTE BROADCAST <T-NAME> smells awful!\n\r\
Description: \n\r\
Makes the object with this property respond to a SNIFF command.  More than one \
smell may be given, separated by semicolons.  Each smell may have a chance of \
being selected during a sniff using the CHANCE parameter.  ONLY MOBS with this \
property have other options, including an absolute duration before going away \
using the TICKS parameter, the opportunity to emote periodically using the \
EMOTE flag, and the opportunity to emote to adjacent rooms using the BROADCAST \
flag.

PROP_SOCIALS=\
Property   : Prop_Socials\n\r\
Targets    : Areas, Room, Item, Mobs, Exits\n\r\
Parameters : NAME=[SOCIAL NAME] SRCCODE=[CODE] TGTCODE=[CODE] YOUSEE="[MSG]"\n\r\
:          : (TARGET="[TARGET CODE]") (OTHSEE="[MSG]") (TGTSEE="[MSG]")\n\r\
:          : (NOTARGSEE="[MSG]") (MSPFILE=[FILENAME]) (;[MORE SOCIALS]...)\n\r\
Parameters : MASK="[ZAPPER MASK]" ; ...\n\r\
Parameters : WORNONLY=TRUE/FALSE ; ...\n\r\
Parameters : LOAD="[SOCIALS INI FILE PATH]" ; ...\n\r\
Example    : name=USE srccode=V yousee="You use it." ; name=ROP srccode=H ...\n\r\
Example    : load="specialSocials.txt"\n\r\
Description: \n\r\
Creates and defines socials that apply to players in the affected area, room, or \
near the affected exit, or possessing the affected item.\n\r\
\n\r\
The parameters may be a LOAD command for a resource file containing a standard \
socials definition list (see your resources/socials.txt file).  These files \
have a single social definition per line, where each part is separated by \
a tab character.\n\r\
\n\r\
The parameters may also contain a MASK= definition for a zapper mask that will \
determine whether the given invoker player or mob can use the social.  See help \
on ZAPPERMASK for more information on how to use masks.  A WORNONLY variable \
can be set to TRUE or FALSE to determine whether an item with this property \
must be worn in order for the social to be usable.\n\r\
\n\r\
The parameters may also be a semicolon (;) separated list of social definitions \
using the VARIABLE=VALUE format.  The required variables are NAME, SRCCODE, \
TGTCODE, and YOUSEE.  Each variable definition set is separated by semicolons \
to define as many socials as are needed.\n\r\
\n\r\
The allowed variables and valid values are as follows:\n\r\
NAME = the keyword/name of the social -- the command\n\r\
SRCCODE = source letter: W)ords, M) hands, V)isual, S)ound, O) movement\n\r\
TGTCODE = target letter: T)hands, S)ounds, W)ords, V)noisy moves, O) visual\n\r\
TARGET = target: <T-NAME> SELF ALL <I-NAME> <V-NAME> <E-NAME> [ITEM]\n\r\
YOUSEE = What the command invoker sees (<S-NAME>) sees.\n\r\
OTHSEE = What others see the invoker do\n\r\
TGTSEE = What the target (if any) sees\n\r\
NOTARGSEE = What the invoker sees when the target is not present\n\r\
MSPFILE = name of msp sound file in your sounds directory 

PROP_SPARRINGROOM=\
Property   : Prop_SparringRoom\n\r\
Targets    : Areas, Room\n\r\
Parameters : (ROOMID)\n\r\
Example    : SparringArea#123\n\r\
Description: \n\r\
Creates a room or area where death is of little consequence.  Players (not \
mobs) who die in this area will lose neither equipment, nor experience, \
but will be brought back to their Start room (not their death room), or \
to any room designated in the parameters.  Players also cannot flee or \
recall.

PROP_SPELLADDER=\
Property   : Prop_SpellAdder\n\r\
Targets    : Rooms, Items, MOBs\n\r\
Parameters : See Prop_HereSpellCast\n\r\
Parameters : See Prop_HereSpellCast\n\r\
Example    : 50%;Spell_Invisible;Prayer_Sanctuary\n\r\
Description: \n\r\
Casts the spells in the parameters on the next one to enter the same room. \
as the item, mob, or room with this property.

PROP_SPELLREFLECTING=\
Property   : Prop_SpellReflecting\n\r\
Targets    : MOBs, Items\n\r\
Parameters : (MIN=[LEVEL]) (MAX=[LEVEL]) (CHANCE=[%]) (FADE=0/1) (REMAIN=[NUM])\n\r\
Example    : min=1 max=30 chance=100 fade=0 remain=100\n\r\
Example    : max=10 chance=75 fade=1 remain=50\n\r\
Description: \n\r\
This complex property allows the archon to set up mobs or items which, when worn, \
are capable of reflecting spells cast at the mob back to the source.  The min and \
max parms describe the levels of spells which may be reflected.  The chance parm \
describes the % chance of a spell being reflected.  Remain is the number of \
spell levels which may be reflected.  Every time a spell is reflected, the level \
of the spell is subtracted from the remain value.  When remain reaches below 0, the \
item or mob will no longer reflect spells.  Fade describes whether the \
property is persistent or destructive.  If fade is equal to 1 or more, then the \
property is destructive, meaning that the mob will never again gain the fading \
benefit from this property after remain reaches below 0.  If the property was \
on an item, it will be destroyed. If fade is equal to 0, then the property \
is persistent.  The property will still stop working when the remain value \
reaches below 0, but the item will not be destroyed, and will begin to \
regain its strength at a rate of 1 point every 5 minutes or so.

PROP_STATADJUSTER=\
Property   : Prop_StatAdjuster\n\r\
Targets    : MOB\n\r\
Parameters : (STR=#) (INT=#) (DEX=#) (CHA=#) (CON=#) (WIS=#)\n\r\
Parameters : (ADJMAX=TRUE/FALSE)\n\r\
Example    : \n\r\
Example    : CON=1\n\r\
Example    : STR=3 INT=5 DEX=2 CON=-3 CHA=-2 WIS=-1\n\r\
Description: \n\r\
This property adjusts a mobs basic stats up or down.  Normally, \
these stats won't go above the mobs max stats.  However, if ADJMAX \
is set to true, the max stat will also be adjusted.

PROP_STATTRAINER=\
Property   : Prop_StatTrainer\n\r\
Targets    : MOB\n\r\
Parameters : (STR=#) (INT=#) (DEX=#) (CHA=#) (CON=#) (WIS=#)\n\r\
Parameters : (BASEVALUE=#) (NOTEACH)\n\r\
Example    : \n\r\
Example    : BASEVALUE=10 CON=10\n\r\
Example    : STR=30 INT=15 DEX=20 CON=0 CHA=0 WIS=0 NOTEACH\n\r\
Description: \n\r\
This property changes a mobs basic 6 stats.  With no parameter, it will set all \
stats to 25 (or the base value), making the mob a suitable trainer.  Other parameters may be entered \
in order to set the stats of the mob to the specified values.  Any values not \
given will default to 25 (or the base value).  If you do not want the mob to also be a trainer, you \
may include the NOTEACH flag. Use BASEVALUE to change the base value from 25 to something else.  A \
BASEVALUE of -1 will prevent any alteration of that stat.

PROP_STAYABOARD=\
Property   : Prop_StayAboard\n\r\
Targets    : MOB, ITEM\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Put this property on mobs or items that you want to be perpetually mounted on whatever \
it is initially mounted on/to.  This is especially useful for Patrollers in chaotic \
environments where a gust of wind or a nasty current may throw things out of whack.

PROP_TATTOO=\
Property   : Prop_Tattoo\n\r\
Targets    : MOB\n\r\
Parameters : tattoo names delimited by semicolons\n\r\
Example    : ;UNDEADKILLER;MANLYMEN;\n\r\
Description: \n\r\
This property WAS used to give MOBs tattoos.  It is deprecated now. \
They are now stored on MOB objects.  See Help TATTOO.\n\r\
Prefix the tattoo name with ACCOUNT(space) to use account-based tattoos.

PROP_TATTOOADDER=\
Property   : Prop_TattooAdder\n\r\
Targets    : MOBs, Items, Exits, Rooms, \n\r\
Targets    : Areas, Weapons, Food, Drink, Armor\n\r\
Parameters : tattoo name to grant or remove\n\r\
Example    : MANLYMEN\n\r\
Example    : -MANLYMEN\n\r\
Example    : +-MANLYMEN\n\r\
Example    : +~MANLYMEN\n\r\
Example    : +-~MANLYMEN\n\r\
Example    : +34 MANLYMEN\n\r\
Description: \n\r\
This property is used to give MOBs tattoos based on an action taken.  The tattoo is \
given by the object with this property, based on an action which depends on the type of \
object with this property.  \n\r\
The tattoo parameter is prefixed with - to remove it when the trigger occurs. \n\r\
The tattoo parameter is prefixed with + (or nothing) to add it when the trigger occurs. \n\r\
The tattoo parameter is prefixed with +- to add or remove it when the trigger occurs. \n\r\
The tattoo parameter (after any +- marks) is prefixed with ~ to disable emoting.\n\r\
The tattoo parameter is prefixed (after +- or ~) with a number to make it decay.\n\r\
The tattoo name is prefixed with ACCOUNT(space) to use account-based tattoos.\n\r\
The actions which trigger the tattoo include:\n\r\
MOB - death \n\r\
Item - get \n\r\
Exit - enter \n\r\
Room - enter \n\r\
Area - enter \n\r\
Weapon - use in battle \n\r\
Food - eat \n\r\
Drink - drink \n\r\
Armor - wear

PROP_TICKETTAKER=\
Property   : Prop_TicketTaker\n\r\
Targets    : Mobs, Items\n\r\
Parameters : Cost of boarding\n\r\
Example    : 100\n\r\
Description: \n\r\
This property makes a mob or item the master of a carriage, horse, or other \
rideable item.  They will require the payment of gold specified in the \
parameters before allowing anyone else to board.  Non-player mobs will \
always be allowed to board.  The ticket taker must be riding either \
the carriage, or riding a horse pulling it, or actually BE the carriage.

PROP_TRAINER=\
Property   : Prop_Trainer\n\r\
Targets    : MOB\n\r\
Parameters : (STR=#) (INT=#) (DEX=#) (CHA=#) (CON=#) (WIS=#) (NOTEACH)\n\r\
Parameters : ((ALL) [CLASSNAME]) (EXPERTISENAMES)\n\r\
Example    : \n\r\
Example    : CON=10\n\r\
Example    : STR=30 INT=15 DEX=20 CON=0 CHA=0 WIS=0 NOTEACH\n\r\
Example    : all Fighter all Cleric\n\r\
Description: \n\r\
This property makes a mob a suitable target for the TRAIN command for players. \
With no parameter, it will set all stats to 25, give them 0 levels in all \
classes, and give them all expertises.  Other parameters may be entered \
in order to set the stats of the mob to the specified values.  Any values not \
given will default to 25.  If you do not want the mob to also be a trainer, you \
may include the NOTEACH flag.  Listing one or more class names will make that \
trainer have 0 levels in those classes (able to train to it).  Not listing any \
will give the mob ALL classes at level 0.  Listing expertise IDs works similarly.

PROP_TRANSPORTER=\
Property   : Prop_Transporter\n\r\
Targets    : MOBs, Items, Exits, Rooms, Areas, Weapons, Food, Drink, Armor\n\r\
Parameters : Room ID (; (SENDENTER=[TRUE/FALSE]))\n\r\
Example    : Midgaard#3001\n\r\
Example    : Midgaard#3001;sendenter=true\n\r\
Description: \n\r\
This property is used to transport mobs to a particular place based on an action taken.  \
The actions which trigger the transport include:\n\r\
Rideable - mount \n\r\
MOB - speak \n\r\
Item - get \n\r\
Exit - enter \n\r\
Room - enter \n\r\
Area - enter \n\r\
Weapon - use in battle \n\r\
Food - eat \n\r\
Drink - drink \n\r\
Armor - wear \n\r\
 \n\r\
Normally, this skill bypasses any normal notifications, but behaves as if the transported \
mob is "just there".  Add a semicolon and set "sendenter" to true for scripts to see the \
movement.

PROP_TRASHCAN=\
Property   : Prop_Trashcan\n\r\
Targets    : Room, Container Item\n\r\
Parameters : (DELAY=[#TICKS])\n\r\
Example    : \n\r\
Example    : DELAY=4\n\r\
Description: \n\r\
Causes all items dropped, or placed in the host container to be  \
destroyed and to cease to exist.  If a delay parameter is used, the destruction of \
the items in the can will not occur until that time has passed.

PROP_UNCAMPABLE=\
Property   : Prop_Uncampable\n\r\
Targets    : Items, Rooms, Mobs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
If this mob, room, or item is otherwise rejuvenating, this property will prevent the \
rejuvenation from actually occurring if PCs are in the same room as the rejuvenation, \
but an admin is not present.

PROP_UNSELLABLE=\
Property   : Prop_Unsellable\n\r\
Targets    : Items, Mobs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Makes the mob or item unable to be sold to a shopkeeper.

PROP_USESPELLCAST=\
Property   : Prop_UseSpellCast\n\r\
Targets    : Items\n\r\
Parameters : a list of properly named spells separated by semicolons\n\r\
Parameters : Spell names may optionally have parameters in parenthesis.\n\r\
Parameters : The above parameters may be followed by an optional mask\n\r\
Example    : Spell_MageArmor;Spell_Shield\n\r\
Example    : 90%;Spell_Portal(Somewhere else);Prayer_SummonElemental(/FIRE)\n\r\
Example    : Spell_MageArmor;Spell_Shield; MASK=-RACE +Dwarf\n\r\
Description: \n\r\
When the item with this property is worn or wielded, filled or has \
something placed in it, the owner will be affected by the listed spells. \n\r\
\n\r\
The parameters may also END with the key word MASK= followed by a mask.  This \
mask will select which kinds of mobs and players will be affected by this property. \
See ZAPPERMASKS for more information on zapper mask syntax.

PROP_USESPELLCAST2=\
Property   : Prop_UseSpellCast2\n\r\
Targets    : Items\n\r\
Parameters : a list of properly named spells separated by semicolons\n\r\
Parameters : Spell names may optionally have parameters in parenthesis.\n\r\
Parameters : The above parameters may be followed by an optional mask\n\r\
Example    : Spell_MageArmor;Spell_Shield\n\r\
Example    : 90%;Spell_Portal(Somewhere else);Prayer_SummonElemental(/FIRE)\n\r\
Example    : Spell_MageArmor;Spell_Shield; MASK=-RACE +Dwarf\n\r\
Description: \n\r\
When the item with this property is touched, or in the case of food and \
drink, eaten or drank, the owner will be affected by the listed spells.  \n\r\
\n\r\
The parameters may also END with the key word MASK= followed by a mask.  This \
mask will select which kinds of mobs and players will be affected by this property. \
See ZAPPERMASKS for more information on zapper mask syntax.

PROP_WEAKBRIDGE=\
Property   : Prop_WeakBridge\n\r\
Targets    : Rooms, Exits\n\r\
Parameters : max=[WEIGHT] chance=[%] down=[# TICKS]\n\r\
Example    : max=400 chance=75 down=300\n\r\
Description: \n\r\
Whenever a player enters or exits the room or exit with this property, \
that player is in great danger.  If their total weight exceeds the \
weight specified by the max parameter, there is a % chance equals to the \
chance parameter that the bridge beneath them will break.  If the property \
is on an exit, that means instant death for the player.  If the property \
is on an InTheAir type room with a place to fall beneath it, they will \
fall.  If the property is on any other kind of room, instant death will \
result.  The down property describes how many ticks the bridge will remain \
"down" once it has been broken by a heavy player.  Flying can always \
overcome this property.

PROP_WEAPONIMMUNITY=\
Property   : Prop_WeaponImmunity\n\r\
Targets    : Items, Mobs\n\r\
Parameters : List of immunities\n\r\
Example    : +ALL -SILVER -CLOTH -LEATHER\n\r\
Example    : +ALL -MAGIC -SLASHING -FROSTING\n\r\
Example    : +ALL -LEVEL15\n\r\
Example    : +BASHING +IRON +STEEL +MAGIC\n\r\
Example    : +ALL +MAGICSKILLS +AXE +THROWN +DAGGER\n\r\
Description: \n\r\
Whenever the item with this property is worn, or for the mob with \
this property, they will attain damage immunities to the types and/or \
materials of weapons specified.  Here are the parameters: \n\r\
+ALL - Specifies that, by default, the mob is immune to ALL damage.\n\r\
-DAMAGETYPE- Creates an exception to the +ALL rule by permitting damage \
of the given type.  Examples for DAMAGETYPE would be -PIERCING, -GASSING, \
-SLASHING, -BURNING, -MELTING, -NATURAL, -BASHING, etc.\n\r\
+DAMAGETYPE- Can be used instead of +ALL to create an immunity to the given \
damage type.  Examples for DAMAGETYPE would be +PIERCING, +GASSING, \
-WEAPONCLASS- Creates an exception to the +ALL rule by permitting damage \
of the given type.  Examples for WEAPONCLASS would be -AXE, -BLUNT, -EDGED, \
-FLAILED, -HAMMER, -KARATE, -POLEARM, -RANGED, -SWORD, -DAGGER, \
-STAFF, -THROWN, etc.\n\r\
+WEAPONCLASS- Can be used instead of +ALL to create an immunity to the given \
of the given type.  Examples for WEAPONCLASS would be +AXE, +BLUNT, +EDGED, \
+FLAILED, +HAMMER, +KARATE, +POLEARM, +RANGED, +SWORD, +DAGGER, \
+STAFF, +THROWN, etc.\n\r\
-MAGIC - Creates an exception to the +ALL rule by permitting damage from \
magical spells and magical weapons.\n\r\
+MAGIC - If +ALL is not used, this will create an immunity to magical \
spells and weapons.\n\r\
-MAGICSKILLS - Creates an exception to the +ALL rule by permitting damage from \
magical spells, chants, songs, or prayers.\n\r\
+MAGICSKILLS - If +ALL is not used, this will create an immunity to magical \
spells, chants, songs, and prayers.\n\r\
-LEVELX - Creates an exception to the +ALL rule by permitting damage from \
weapons whose level is X or better. Example: -LEVEL1, -LEVEL5, -LEVEL10, etc.\n\r\
+LEVELX - Can be used instead of +ALL to create an immunity to \
weapons whose level is X or lower. Example: +LEVEL1, +LEVEL5, +LEVEL10, etc.\n\r\
-MATERIALTYPE - Creates an exception to the +ALL rule above by permitting \
damage from a weapon made of the given MATERIALTYPE.  Where MATERIALTYPE \
may be any valid material, such as SILVER, WOOD, COTTON, etc.  As for the \
damage types above, +MATERIALTYPE may be used instead of +ALL to create \
an immunity to a given material.\n\r\
-PARALYSIS - Creates an exception to the +All rule by permitting damage from paralysis spells.\n\r\
+PARALYSIS - If +All is not used, this creates an immunity to damage from paralysis spells.\n\r\
-FIRE - Creates an exception to the +All rule by permitting damage from fire spells.\n\r\
+FIRE - If +All is not used, this creates an immunity to damage from fire spells.\n\r\
-COLD - Creates an exception to the +All rule by permitting damage from cold spells.\n\r\
+COLD - If +All is not used, this creates an immunity to damage from cold spells.\n\r\
-WATER - Creates an exception to the +All rule by permitting damage from water spells.\n\r\
+WATER - If +All is not used, this creates an immunity to damage from water spells.\n\r\
-GAS - Creates an exception to the +All rule by permitting damage from gas spells.\n\r\
+GAS - If +All is not used, this creates an immunity to damage from gas spells.\n\r\
-MIND - Creates an exception to the +All rule by permitting damage from mind spells.\n\r\
+MIND - If +All is not used, this creates an immunity to damage from mind spells.\n\r\
-JUSTICE - Creates an exception to the +All rule by permitting damage from justice spells.\n\r\
+JUSTICE - If +All is not used, this creates an immunity to damage from justice spells.\n\r\
-ACID - Creates an exception to the +All rule by permitting damage from acid spells.\n\r\
+ACID - If +All is not used, this creates an immunity to damage from acid spells.\n\r\
-ELECTRICITY - Creates an exception to the +All rule by permitting damage from electric spells.\n\r\
+ELECTRICITY - If +All is not used, this creates an immunity to damage from electric spells.\n\r\
-POISON - Creates an exception to the +All rule by permitting damage from poison spells.\n\r\
+POISON - If +All is not used, this creates an immunity to damage from poison spells.\n\r\
-UNDEAD - Creates an exception to the +All rule by permitting damage from undead spells.\n\r\
+UNDEAD - If +All is not used, this creates an immunity to damage from undead/evil spells.\n\r\
-DISEASE - Creates an exception to the +All rule by permitting damage from disease spells.\n\r\
+DISEASE - If +All is not used, this creates an immunity to damage from disease spells.\n\r\
-TRAPS - Creates an exception to the +All rule by permitting damage from traps spells.\n\r\
+TRAPS - If +All is not used, this creates an immunity to damage from traps spells.\n\r

PROP_WEARADJUSTER=\
Property   : Prop_WearAdjuster\n\r\
Targets    : Items (armor and weapons principally)\n\r\
Parameters : see Prop_HaveAdjuster, and may include optional LAYERED flag\n\r\
Example    : str+2 dex-2 move+100 class=thief race=elf gender=F\n\r\
Example    : str+2 dex-2 move+100 LAYERED MASK=-Race +Dwarf\n\r\
Description: \n\r\
Whenever the item having this property is wielded or worn, the statistics of \
the owner will be adjusted as described in the parameters.  Removing the \
item will remove the effects.  The Layered flag may be used to prevent \
bonus or penalty stacking due to multiple items worn on the same location. \
See Prop_HaveAdjuster for more information on the valid parameters for this property.  

PROP_WEARENABLER=\
Property   : Prop_WearEnabler\n\r\
Targets    : Items\n\r\
Parameters : a list of properly named spells separated by semicolons\n\r\
Parameters : Spell names may optionally have parameters in parenthesis.\n\r\
Parameters : The above parameters may be followed by an optional mask\n\r\
Parameters : The above parameters may include optional LAYERED flag\n\r\
Example    : Spell_MageArmor;Spell_Shield\n\r\
Example    : Spell_MageArmor;LAYERED;Spell_Shield\n\r\
Example    : 90%;Spell_Portal(Somewhere else);Prayer_SummonElemental(/FIRE)\n\r\
Example    : Spell_MageArmor;Spell_Shield; MASK=-RACE +Dwarf\n\r\
Description: \n\r\
So long as the item with this property is worn, wielded, or held, the owner \
will be granted the spells, skills listed.  The percentage given is optional, \
and will be the proficiency of the skill.  If a percentage is not given, the \
default is 100%.  The layered flag means that, among layers of armor, only \
the top layer will grant its effect.\n\r\
\n\r\
The parameters may also END with the key word MASK= followed by a mask.  This \
mask will select which kinds of mobs and players will be affected by this property. \
See ZAPPERMASKS for more information on zapper mask syntax. 

PROP_WEAROVERRIDE=\
Property   : Prop_WearOverride\n\r\
Targets    : Items\n\r\
Parameters : masking parameters described below\n\r\
Example    : -class +mage -race +elf -evil\n\r\
Description: \n\r\
Whenever the owner of the item with this property tries to wear or wield the \
item, they will be be permitted only if allowed by the mask argument.  \
Additionally, if they are permitted, then any wear restrictions that would \
normally prevent them from wearing the item will be suspended until the \
item is removed.  This is so that you can make special armor for creatures \
that normally can't wear standard gear, such as barding for horse backs, and \
so forth.\n\r\
Valid masking parameters include:  \n\r\
<ZAP=disallow>

PROP_WEARRESISTER=\
Property   : Prop_WearResister\n\r\
Targets    : Items (armor and weapons principally)\n\r\
Parameters : see Prop_HaveResister, and may include optional LAYERED flag\n\r\
Example    : magic 50% poison -10%\n\r\
Example    : magic 50% poison -10% LAYERED MASK=-RACE +Dwarf\n\r\
Description: \n\r\
Whenever the item having this property is wielded or worn, the owner gains \
certain resistances and immunities described in the parameters.  When removed, \
the resistances and immunities are also cancelled.  The Layered flag may be used to prevent \
resistance stacking due to multiple items worn on the same location. \
See Prop_HaveResister for more information on the valid parameters for this property.   

PROP_WEARSPELLCAST=\
Property   : Prop_WearSpellCast\n\r\
Targets    : Items\n\r\
Parameters : a list of properly named spells separated by semicolons\n\r\
Parameters : Spell names may optionally have parameters in parenthesis.\n\r\
Parameters : The above parameters may be followed by an optional mask\n\r\
Parameters : The above parameters may include optional LAYERED flag\n\r\
Example    : Spell_MageArmor;Spell_Shield\n\r\
Example    : Spell_MageArmor;LAYERED;Spell_Shield\n\r\
Example    : 90%;Spell_Portal(Somewhere else);Prayer_SummonElemental(/FIRE)\n\r\
Example    : Spell_MageArmor;Spell_Shield; MASK=-RACE +Dwarf\n\r\
Description: \n\r\
So long as the item with this property is being worn or wielded, the owner \
will be under the effect of the listed spells. The layered flag means that, \
among layers of armor, only the top layer will grant its effect. \
The flag NOUNINVOKE can be substituted for a spell \
to make all the effects non-dispellable until the property no longer applies; \
use this flag with care! The flag LEVEL=[NUMBER] can also be substituted for a spell \
name to force all the listed effects be cast at a different level than default.\
The flag MAXTICKS=[NUMBER] can be used to shorted the length of spell casts. \n\r\
\n\r\
The parameters may also END with the key word MASK= followed by a mask.  This \
mask will select which kinds of mobs and players will be affected by this property. \
See ZAPPERMASKS for more information on zapper mask syntax.

PROP_WEARZAPPER=\
Property   : Prop_WearZapper\n\r\
Targets    : Items\n\r\
Parameters : masking parameters described below, optional zap message\n\r\
Example    : -class +mage -race +elf -evil\n\r\
Example    : MESSAGE="<O-NAME> falls out of <S-NAME>'s hands!" -class +mage\n\r\
Description: \n\r\
Whenever the owner of the item with this property tries to wear or wield the \
item, they will be zapped unless it is allowed by the listed parameters.  \n\r\
An optional MESSAGE parameter can define what is seen when the zap occurs. \
Also optionally, the parameters can start with the word ACTUAL to change \
zapping behavior to look at actual values instead of perceived values \
(this about a class check applied to a Charlatan.) \
Valid masking parameters include:  \n\r\
<ZAP=disallow>

PROP_WEATHER=\
Property   : Prop_Weather\n\r\
Targets    : Areas\n\r\
Parameters : the weather type and/or one or more climate masks\n\r\
Example    : RAIN\n\r\
Example    : RAIN CLIMATE_WET\n\r\
Description: \n\r\
Makes this area always have the same weather.  Valid weather values include: \
"CLEAR", "CLOUDY", "WINDY", "RAIN", "THUNDERSTORM", "SNOW", "HAIL", "HEAT", \
"SLEET","BLIZZARD","DUST","DROUGHT","COLD"\n\r\
\n\r\
Can also change the climate settings.  Valid climate mask values include: \
"CLIMATE_NORMAL","CLIMATE_WET","CLIMATE_COLD","CLIMATE_WINDY","CLIMATE_HOT","CLIMATE_DRY"

PROP_WIZINVIS=\
Property   : Prop_WizInvis\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Grants the MOB unlimited sensory knowledge as well as complete undetectibility.

QUESTBOUND=\
Property   : QuestBound\n\r\
Targets    : Mobs, Items\n\r\
Parameters : Class reference code of a Quest object\n\r\
Example    : Don't worry about it\n\r\
Description: \n\r\
A temporary affect automatically added to all quest mobs and items both \
created and existing. \
Its purpose is to detect when a reset, shutdown, or other disaster is about to \
happen to the mob or item so that the quest can be stopped.  This prevents \
unwanted properties/behaviors/changes from being saved to the database on accident.

SOUNDECHO=\
Property   : SoundEcho\n\r\
Targets    : Areas, Rooms\n\r\
Parameters : [RANGE]\n\r\
Example    : 4\n\r\
Description: \n\r\
Causes sound to echo around the area or room when it occurs.

TATTOO=\
Tattoo's are intended to \
act as miscellaneous flags which players may obtain, not unlike a quest point.  \
These tattoo's can then be checked for as requirements to enter rooms or exits, \
or to possess certain items.  If the common account system is used, accounts can \
also have tattoos on them as well. \
\n\r\
An example would be like this:  The completion of a specific quest occurs when \
Gunther defeats the evil sorcerer Nunder and enters his inner chamber (where all \
the treasure is hidden).  Entering this inner chamber automatically grants Gunther \
a Tatto called "NUNDERKILLER".  Now, elsewhere in the realm is the second quest \
where Nunder's apprentice has escaped with an ancient artifact and is up to \
no good.  However, to even ENTER the area where Nunder's apprentice is operating, \
the system (via the Prop_ReqTattoo property on this other Area) requires that \
Gunther already have the "NUNDERKILLER" Tattoo.  If Gunther had not defeated \
Nunder and obtained the "NUNDERKILLER" Tattoo, he would not be allowed into \
the realm of Nunder's apprentice.

TEMPORARYAFFECTS=\
Property   : Temporary Affects\n\r\
Targets    : Mobs, Items, Exits, Rooms\n\r\
Parameters : [ABILITYID/BEHAVIORID] [NUM TICKS] ([PARAMETERS])\n\r\
Parameters : +[ABILITYID/BEHAVIORID] [NUM TICKS] ([PARAMETERS])\n\r\
Parameters : -[ABILITYID/BEHAVIORID]\n\r\
Example    : +Mood 10 HAPPY\n\r\
Example    : +Clericness 20 Healer\n\r\
Example    : +Prop_Hidden 10\n\r\
Description: \n\r\
Allows the builder to temporarily affect a mob, item, exit, or room with a \
property or behavior that would normally be permanent if applied in a normal \
way.  The first parameter is the ability id or the behavior id, the second \
is the number of ticks that it will last, while the last parameter is optional \
parameters for THAT ability or behavior.  The parameters may be prefixed with a \
plus(+) sign to allow it to stack with other temporary affects.  A minus(-) sign \
followed by an ability or behavior id will prematurely remove the temporary \
affect.

TEMPORARYIMMUNITY=\
Property   : TemporaryImmunity\n\r\
Targets    : Mobs\n\r\
Parameters : Ability ID/Start time in millis;etc..\n\r\
Example    : Disease_Cold/12312312323;Spell_Fireball/123123132\n\r\
Description: \n\r\
This is used by diseases primarily to provide a mob or player with \
temporary (30 mud hour) immunity to a set of diseases.

