#!QUESTMAKER_START_SCRIPT Competitive Delivery #4
#The player delivers money to one or more existing mobs in your world
#at the behest of one other.  A reward is given upon delivery.
#
#!QUESTMAKER_PAGE Quest Name/Duration
#Enter the unique name and starting time/duration for your new quest.
#Times are entered as a simple number or math expression to denote a
#time in default ticks (4 second period), or you may follow the expression 
#with the word seconds, minutes, hours, days, mudhours, muddays, mudweeks,
#mudmonths, or mudyears.  Time expressions may include numbers, math 
#symbols, or the ? operator to generate random numbers.  Example:
#"5 + 3?10 minutes" would generate a frequency of 8-15 minutes.#
#
#Quest ID:
#Enter a unique name/id for your quest:
#$QUEST_ID=$UNIQUE_QUEST_NAME=competitive_delivery_4
#
#Quest Name:
#Enter a friendly displayable name for your quest:
#$QUEST_NAME=$STRING=Competitive Delivery #4
#
#Quest Frequency:
#This is the time between quest starts.
#$FREQUENCY=$TIMEEXPRESSION=90 minutes
#
#Quest Duration:
#This is how long your quest remains running, and how long a player 
#accepting the quest has to complete the quest and report back in.
#$DURATION=$TIMEEXPRESSION=90 minutes
#
#Quest-Player Criterium:
#You may leave this entry blank, or enter a Zapper Mask to describe what
#kinds of players may participate in this quest.  You can use this to set
#race, level, or other requirements.
#$QUEST_CRITERIA=$ZAPPERMASK
#
#!QUESTMAKER_PAGE Specify the Announcer
#The Announcer is the mob who wants you to pay someone else. This must
#be an existing mob in your world.  
#
#Announcer Area/Room: 
#Specify below the name of the area that your announcer mob will be located
#in and/or the room in which the mob can be found.  You may leave both blank
#to force the quest manager to find the mob somewhere in the world, but this
#will hurt the performance of your mud, so use with care.
#Use double-quotes around multi-word areas and room ids/names.
#  
#Announcer Area:
#$ANNOUNCER_AREA=($AREA)
#Announcer Room ID:
#$ANNOUNCER_ROOM=($ROOMID)
#
#Announcer mob name: 
#Specify the name of the mob who will act as the announcer mob.  
#Use double-quotes around multi-word names.
#If you specified an area or room above, then the mob must be located there.
#You may optionally have the quest manager select a 'random' mob by entering
#a mob name of ANY MASK= followed by a Zapper Mask (see help on 
#ZAPPERMASKS for information on zapper mask syntax).
#Remember, if the quest manager can not find your mob, the quest will not
#be started.
#$ANNOUNCER_NAME=$NAME
#
#Announcer reasons: 
#Specify some additional bit of speech the announcer 
#mob will say to players to send them on their way.  The
#announcer will already be specifying the name of the mob to pay,
#but you might want to say why, or where the mob is, or something
#about the reward, or whatever.
#$REASONING=($LONG_STRING)
#
#Announcer announcement:
#Select what type of annoucement the Announcer will make when the quest starts.
#$QUEST_ANNOUNCEMENT_TYPE=$CHOOSE=YELL,QUESTCHAT,MPECHO,SAY
#This is what the announcement says.  Leave it blank if you only want him to talk to people who enter the room with him.
#$QUEST_ANNOUNCEMENT=($STRING)
#
#!QUESTMAKER_PAGE Specify the Deliveree
#The Deliveree is the mob to which the item will be delivered. 
#
#Deliveree Area/Room: 
#Specify below the name of the area that your deliveree mob will be located
#in and/or the room in which the mob can be found.  You may leave both blank
#to force the quest manager to find the mob somewhere in the world, but this
#will hurt the performance of your mud, so use with care.  
#Use double-quotes around multi-word areas and room ids/names.
#
#Deliveree Area:
#$DELIVEREE_AREA=($AREA)
#Deliveree Room:
#$DELIVEREE_ROOM=($ROOMID)
#
#Deliveree mobs names: 
#Specify the names of the mob who will act as the deliveree mobs.  
#Use double-quotes around multi-word names.
#If you specified an area or room above, then the mob must be located there. 
#You may optionally have the quest manager select a 'random' mob by entering
#a mob name of ANY MASK= followed by a Zapper Mask (see help on 
#ZAPPERMASKS for information on zapper mask syntax).
#Remember, if the quest manager can not find your mobs, the quest will not
#be started.
#$DELIVEREE_NAME=$NAME
#
#!QUESTMAKER_PAGE Specify the Deliveree Mob details
#The Deliveree Mobs are the mobs the player must find and hand the money to.
#Here you can specify how many of deliverees and what they say.e
#
#Amount of money: 
#The total amount of money required to complete the quest.  This will be in
the deliveree mobs local currency.
#$DELIVEREE_COUNT=($EXPRESSION)=100
#
#Deliveree response: 
#You may optionally specify some additional bit of speech the deliveree 
#mob will say to the players after the money is handed over. 
#$DELIVER_RESPONSE=($LONG_STRING)=Thank you.
#
#!QUESTMAKER_PAGE Quest Completion
#Select some rewards for delivering the item:
#
#Reward items: 
#Specify zero or more items to choose from as a reward 
#$REWARD_ITEMS=$ITEMXML_ZEROORMORE
#
#Quest Point?
#$QUEST_POINT=$CHOOSE=YES,NO
#Amount of experience points, blank for none, or a number% for percent of exp to next level:
#$EXP=($STRING)=10%
#
#Player Faction to give to or take from:
#$FACTION=($FACTION)
#If you selected a faction above, enter a new numeric amount, 
#or enter +value to add, or --value to subtract:
#$NUMFACTION=($STRING)
#
#Select whether a player may complete this quest multiple times,
#or 'prev' to require a previous quest, if multiple found.
#$MULTIPLE=$CHOOSE=YES,NO,PREV
#
#If you choose, you may have completion of this quest automatically start another.
#If this is what you want, enter the next quests name here:
#$NEXT_QUEST=($EXISTING_QUEST_NAME)
#
#$CATEGORY=($HIDDEN)=
#
#!QUESTMAKER_END_SCRIPT Competitive Delivery #4

set name $QUEST_ID
set display $QUEST_NAME
set author $#AUTHOR
set questtype competitive_delivery4
set category $CATEGORY
set instructions Please pay ${2 *} $DELIVEREE_COUNT.  $REASONING

set wait $FREQUENCY
set interval 1
#quiet

set minplayers 1
set playermask $QUEST_CRITERIA

set area $ANNOUNCER_AREA
set room $ANNOUNCER_ROOM
set mobgroup
set mob $ANNOUNCER_NAME
give stat keyplayer true
give script LOAD=$QUEST_ID_announcer.script
set mob
set item

set area $DELIVEREE_AREA
set room $DELIVEREE_ROOM
set mobgroup $DELIVEREE_NAME
give stat keyplayer true
give script LOAD=$QUEST_ID_deliveree.script

set duration $DURATION

<?xml version="1.0"?>
<FILE><NAME>$QUEST_ID_rewarditems.xml</NAME><DATA><ITEMS>$REWARD_ITEMS</ITEMS></DATA></FILE>
<FILE><NAME>$QUEST_ID_announcer.script</NAME>
<DATA>
ONCE_PROG 100
	mpqset * INSTRUCTIONS $i in $a wants you to 'Please pay ${2 *} $DELIVEREE_COUNT.  $REASONING'
	$QUEST_ANNOUNCEMENT_TYPE $QUEST_ANNOUNCEMENT
~

# this script is for the announcer
GREET_PROG 100
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) and ( EVAL('$MULTIPLE' != 'PREV') or QUESTWINNER($n previous) )
		if EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
			sayto "$n" I need someone to pay $DELIVEREE_COUNT to ${2 *}.  If you'll pay for me, say 'I accept', and I will give you the details.
		endif
	endif
~

SPEECH_PROG mission problem quest help pay paid 'me to do' 'to do' mission? problem? quest? help? paid? pay? 'me to do?' 'to do?' quests 
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) and ( EVAL('$MULTIPLE' != 'PREV') or QUESTWINNER($n previous) )
		if EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
			sayto "$n" I need someone to pay $DELIVEREE_COUNT to ${2 *}.  If you'll pay for me, say 'I accept', and I will give you the details.
		endif
	endif
~

FUNCTION_PROG CAN_ACCEPT
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) and ( EVAL('$MULTIPLE' != 'PREV') or QUESTWINNER($n previous) )
		if EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
			if VAR($n $QUEST_ID_ACCEPTED == '')
				RETURN TRUE
			endif
		endif
	endif
	RETURN CANCEL
~

FUNCTION_PROG DO_ACCEPT
	mpscript $n INDIVIDUAL LOAD=$QUEST_ID_playertrack.script
	mpqset * REMAINING $DURATION
	mpqset * STATISTICS ACCEPTED
~

SPEECH_PROG p i accept
	if CALLFUNC(CAN_ACCEPT)
		sayto "$n" Please pay ${2 *} $DELIVEREE_COUNT.  $REASONING
		MPCALLFUNC DO_ACCEPT
	else
		sayto "$n" Yes, yes, I know .. now off with you.
	endif
~
</DATA></FILE>
<FILE><NAME>$QUEST_ID_deliveree.script</NAME>
<DATA>
GREET_PROG 100
	say "$n" Ah, I see you made it.  Go ahead and pay me $DELIVEREE_COUNT.
~
	
BRIBE_PROG 1
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) and ( EVAL('$MULTIPLE' != 'PREV') or QUESTWINNER($n previous) )
		if  EVAL('$MULTIPLE' != 'YES') AND QUESTWINNER($n *)
			if HAS($i $o)
				sayto "$n" What's this?
				give "$o" "$n"
			endif
		else
			mpsetvar $n QUEST_DELIVERED +$%GOLDAMT($o)%
			mpjunk $o
			if EVAL('$<$n QUEST_DELIVERED>' < $DELIVEREE_COUNT)
				sayto "$n" $DELIVER_RESPONSE
				mpechoat $n That's $<$n QUEST_DELIVERED> / $DELIVEREE_COUNT
				return
			endif
			if EVAL('$EXP' != '')
				mpexp $n $EXP
			endif
			if EVAL('$FACTION' != '')
				mpfaction $n $FACTION +$NUMFACTION
			endif
			if EVAL('$QUEST_POINT' == 'YES') AND !QUESTWINNER($n *)
				mpoload QuestPoint
				give "a quest point" "$n"
			endif
			mpoload fromfile $QUEST_ID_rewarditems.xml any
			if EVAL('$b' != '')
				give "$b" "$n"
			endif
			mpquestwin $n *
			mpjunk $o
			sayto "$n" $DELIVER_RESPONSE
			mpendquest *
			mpqset * STATISTICS SUCCESS
			IF EVAL('$NEXT_QUEST' != '')
				mpstartquest $NEXT_QUEST
			ELSE
				IF EVAL('$MULTIPLE' == 'PREV')
					mptransfer $n $n
				ENDIF
			ENDIF
		endif
	else
		if HAS($i $o)
			sayto "$n" What's this?
			give "$o" "$n"
		endif
	endif
~

GIVE_PROG all
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) and ( EVAL('$MULTIPLE' != 'PREV') or QUESTWINNER($n previous) )
		if !ISLIKE($o '-JAVACLASS +Coins +GenCoins +StdCoins') or EVAL('$%GSTAT($o CURRENCY)%' != '$%GSTAT($i CURRENCY)%')
			sayto "$n" What's this?
			give "$o" "$n"
		endif
	endif
~
</DATA></FILE>
<FILE><NAME>$QUEST_ID_playertrack.script</NAME>
<DATA>
ONCE_PROG 100
    mpsetvar $i INSTRUCTIONS Please pay $DELIVEREE_COUNT to ${2 *}. $REASONING 
~

QUEST_TIME_PROG * -1
	mpsetvar $i QUEST_DELIVERED
	if !QUESTWINNER($i *)
		mpechoat $i The quest '$QUEST_NAME' has ended
	endif
	mpqset * STATISTICS FAILED
~

RAND_PROG 99
    if QVAR(* REMAINING == '')
        MPENDQUEST $i
    else
        mpsetvar $i TIME_REMAINING $%QVAR(* REMAINING)%
    endif
~
</DATA></FILE>