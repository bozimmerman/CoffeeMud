#!QUESTMAKER_START_SCRIPT Competitive Killer #1
#An existing mob in your world needs one or more other existing mobs killed. 
#A reward is given upon completion of the task and returning to the announcer.
#
#!QUESTMAKER_PAGE Quest Name/Duration
#Enter the unique name and starting time/duration for your new quest.
#Times are entered as a simple number or math expression to denote a
#time in default ticks (4 second period), or you may follow the expression 
#with the word seconds, minutes, hours, days, mudhours, muddays, mudweeks,
#mudmonths, or mudyears.  Time expressions may include numbers, math 
#symbols, or the ? operator to generate random numbers.  Example:
#"5 + 3?10 minutes" would generate a frequency of 8-15 minutes.#
#
#Quest ID:
#Enter a unique name/id for your quest:
#$QUEST_ID=$UNIQUE_QUEST_NAME=competitive_killer_1
#
#Quest Name:
#Enter a friendly displayable name for your quest:
#$QUEST_NAME=$STRING=Competitive Killer #1
#
#Quest Frequency:
#This is the time between quest starts.
#$FREQUENCY=$TIMEEXPRESSION=90 minutes
#
#Quest Duration:
#This is how long your quest remains running, and how long a player 
#accepting the quest has to complete the quest and report back in.
#$DURATION=$TIMEEXPRESSION=90 minutes
#
#Quest-Player Criterium:
#You may leave this entry blank, or enter a Zapper Mask to describe what
#kinds of players may participate in this quest.  You can use this to set
#race, level, or other requirements.
#$QUEST_CRITERIA=$ZAPPERMASK
#
#!QUESTMAKER_PAGE Specify the Announcer
#The Announcer is the mob who will be wanting the other mobs killed. This must
#be an existing mob in your world.  
#
#Announcer Area/Room: 
#Specify below the name of the area that your announcer mob will be located
#in and/or the room in which the mob can be found.  You may leave both blank
#to force the quest manager to find the mob somewhere in the world, but this
#will hurt the performance of your mud, so use with care.
#Use double-quotes around multi-word areas and room ids/names.
#  
#Announcer Area:
#$ANNOUNCER_AREA=($AREA)
#Announcer Room ID:
#$ANNOUNCER_ROOM=($ROOMID)
#
#Announcer mob name: 
#Specify the name of the mob who will act as the announcer mob.  
#Use double-quotes around multi-word names.
#If you specified an area or room above, then the mob must be located there.
#You may optionally have the quest manager select a 'random' mob by entering
#a mob name of ANY MASK= followed by a Zapper Mask (see help on 
#ZAPPERMASKS for information on zapper mask syntax).
#Remember, if the quest manager can not find your mob, the quest will not
#be started.
#$ANNOUNCER_NAME=$NAME
#
#!QUESTMAKER_PAGE Announcer Speeches
#Specify here some optional things to say for the announcer before and after the quest.
#
#Announcer announcement:
#Select what type of annoucement the announcer will make when the quest starts.
#$QUEST_ANNOUNCEMENT_TYPE=$CHOOSE=YELL,QUESTCHAT,MPECHO,SAY
#This is what the announcement says.  Leave it blank if you only want him to talk to people who enter the room with him.
#$QUEST_ANNOUNCEMENT=($STRING)=I have someones I need killed!
#
#Announcer Notification: 
#Specify some additional bit of speech the announcer mob will say to players when they enter the room.
#$QUEST_NOTIFYSTRING=($LONG_STRING)=I have someones I need killed!  Are you game?
#
#Announcer Instructions: 
#Specify some additional bit of speech the announcer mob will say to players when the quest is accepted.
#$QUEST_INSTRUCTIONSSTRING=($LONG_STRING)=I need you to kill some folks.  They are somewhere around somewhere.  Just beat them senseless.
#
#Announcer success:
#Select what type of speech the announcer will make when a player returns to him after killing the mobs.
#$QUEST_WINSPEECH_TYPE=$CHOOSE=SAY,MPECHO,QUESTCHAT,YELL
#This is what the announcement says.
#$QUEST_WINSPEECH_TEXT=($LONG_STRING)=Congratulations! They're dead!
#
#Announcer failure:
#Select what type of speech the announcer will make when no one returns having killed the mobs.
#$QUEST_LOSESPEECH_TYPE=$CHOOSE=QUESTCHAT,MPECHO,SAY,YELL
#This is what the announcement says.
#$QUEST_LOSESPEECH_TEXT=($LONG_STRING)=Looks like I'll have wait for the law to get after them.
#
#!QUESTMAKER_PAGE Specify the Killable Mob or Mobs
#The Killables are the mob or mobs which must be defeated.
#
#Killables Area/Room: 
#Specify below the name of the area that your killable mob or mobs will be located
#in and/or the room in which the mob or mobs can be found.  You may leave both blank
#to force the quest manager to find the mobs somewhere in the world, but this
#will hurt the performance of your mud, so use with care.  
#Use double-quotes around multi-word areas and room ids/names.
#
#Killables Area:
#$KILLABLES_AREA=($AREA)
#Killables Room:
#$KILLABLES_ROOMS=($ROOMID)
#
#Killables mob names: 
#Specify the names of the mobs who will act as the killable mob or mobs.  
#Use double-quotes around multi-word names.
#If you specified an area or rooms above, then the mobs must be located there. 
#You may optionally have the quest manager select a random mobs by entering
#a mob name of ANY MASK= followed by a Zapper Mask (see help on 
#ZAPPERMASKS for information on zapper mask syntax).
#Remember, if the quest manager can not find your mobs, the quest will not
#be started.
#$KILLABLES_NAMES=$NAME
#
#Num Killables:
#Specify how many of the killable mobs must be killed.
#$NUM_KILLABLES=($EXPRESSION)=1
#
#Killables response: 
#You may optionally specify some additional bit of speech the killables 
#mobs will say to the players when they enter the room with them. 
#$KILLABLES_RESPONSE=($STRING)=So, you've come for me.  Come and get me.
#
#!QUESTMAKER_PAGE Quest Completion
#Select some rewards for killing the mobs:
#
#Reward items: 
#Specify zero or more items to choose from as a reward 
#$REWARD_ITEMS=$ITEMXML_ZEROORMORE
#
#Quest Point?
#$QUEST_POINT=$CHOOSE=YES,NO
#Amount of money (an amount, or leave blank):
#$GOLD=($EXPRESSION)
#Amount of experience points, blank for none, or a number% for percent of exp to next level:
#$EXP=($STRING)=10%
#
#Player Faction to give to or take from:
#$FACTION=($FACTION)
#If you selected a faction above, enter a new numeric amount, 
#or enter +value to add, or --value to subtract:
#$NUMFACTION=($STRING)
#
#Select whether a player may complete this quest multiple times,
#or 'prev' to require a previous quest, if multiple found.
#$MULTIPLE=$CHOOSE=YES,NO,PREV
#
#If you choose, you may have completion of this quest automatically start another.
#If this is what you want, enter the next quests name here:
#$NEXT_QUEST=($EXISTING_QUEST_NAME)
#
#$CATEGORY=($HIDDEN)=
#
#!QUESTMAKER_END_SCRIPT Competitive Killer #1

set name $QUEST_ID
set display $QUEST_NAME
set author $#AUTHOR
set questtype competitive_killer1
set category $CATEGORY
set instructions $QUEST_INSTRUCTIONSSTRING

set wait $FREQUENCY
set interval 1
#quiet

set minplayers 1
set playermask $QUEST_CRITERIA


set area $ANNOUNCER_AREA
set room $ANNOUNCER_ROOM
set mobgroup
set mob $ANNOUNCER_NAME
give stat keyplayer true
give script LOAD=$QUEST_ID_announcer.script

set area $KILLABLES_AREA
set roomgroup $KILLABLES_ROOMS
set room
set mobgroup
set mobgroup $KILLABLES_NAMES
set mob
give script LOAD=$QUEST_ID_killable.script

set duration $DURATION

<?xml version="1.0"?>
<FILE><NAME>$QUEST_ID_rewarditems.xml</NAME><DATA><ITEMS>$REWARD_ITEMS</ITEMS></DATA></FILE>
<FILE><NAME>$QUEST_ID_announcer.script</NAME>
<DATA>
ONCE_PROG 100
	MPQSET * INSTRUCTIONS $i in $a wants you to '$QUEST_INSTRUCTIONSSTRING'
	MPSETVAR * $QUEST_ID_ALREADY_TOLD ''
	MPSETVAR * $QUEST_ID_REWARDED ''
	MPSETVAR * $QUEST_ID_WARNED ''
	MPSETVAR * $QUEST_ID_ACCEPTED ''
	MPSETVAR * $QUEST_ID_KILLED ''
	MPSETVAR * $QUEST_ID_NUMACCEPTED ''
	$QUEST_ANNOUNCEMENT_TYPE $QUEST_ANNOUNCEMENT
~

QUEST_TIME_PROG * 1
	mpsetvar $i $QUEST_ID_NUMACCEPTED '$<$i $QUEST_ID_ACCEPTED>.LENGTH#'
	for $0 = 0 to< '$<$i $QUEST_ID_NUMACCEPTED>'
		tell "$<$i $QUEST_ID_ACCEPTED>.$0" You have 1 minute to complete my quest.
	next
~

QUEST_TIME_PROG * -1
	mpsetvar $i $QUEST_ID_NUMACCEPTED '$<$i $QUEST_ID_ACCEPTED>.LENGTH#'
	for $0 = 0 to< '$<$i $QUEST_ID_NUMACCEPTED>'
		if !QUESTWINNER('$<$i $QUEST_ID_ACCEPTED>.$0' *)
			tell "$<$i $QUEST_ID_ACCEPTED>.$0" You failed to complete my quest in time.
	    endif
		mpqset * STATISTICS FAILED
	next
	if VAR($i $QUEST_ID_REWARDED == '')
		$QUEST_LOSESPEECH_TYPE $QUEST_LOSESPEECH_TEXT
	endif
	MPSETVAR * $QUEST_ID_NUMACCEPTED ''
	MPSETVAR * $QUEST_ID_ALREADY_TOLD ''
	MPSETVAR * $QUEST_ID_ACCEPTED ''
	MPSETVAR * $QUEST_ID_REWARDED ''
	MPSETVAR * $QUEST_ID_WARNED ''
	MPSETVAR * $QUEST_ID_KILLED ''
~

SPEECH_PROG quest quests quest? quests?
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) and ( EVAL('$MULTIPLE' != 'PREV') or QUESTWINNER($n previous) )
		if EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
			if !STRIN('$<$i $QUEST_ID_ALREADY_TOLD>' '$n')
				if VAR($n $QUEST_ID_ACCEPTED == '')
					sayto "$n" $QUEST_NOTIFYSTRING -- just say 'i accept' to take on this quest.
					MPSETVAR $i $QUEST_ID_ALREADY_TOLD '$<$i $QUEST_ID_ALREADY_TOLD> "$n"'
				endif
			endif
		endif
	endif
~

ALL_GREET_PROG 100
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) and ( EVAL('$MULTIPLE' != 'PREV') or QUESTWINNER($n previous) )
		if EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
			if !STRIN('$<$i $QUEST_ID_ALREADY_TOLD>' '$n')
				if VAR($n $QUEST_ID_ACCEPTED == '')
					sayto "$n" $QUEST_NOTIFYSTRING -- just say 'i accept' to take on this quest.
					MPSETVAR $i $QUEST_ID_ALREADY_TOLD '$<$i $QUEST_ID_ALREADY_TOLD> "$n"'
				endif
			endif
		endif
	endif

	IF VAR($n $QUEST_ID_ACCEPTED != '') AND ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) and ( EVAL('$MULTIPLE' != 'PREV') or QUESTWINNER($n previous) )
		if  EVAL('$MULTIPLE' != 'YES') AND QUESTWINNER($n *)
			sayto "$n" Not YOU again
			return
		endif
		if  VAR($i $QUEST_ID_REWARDED == $n)
			sayto "$n" Not YOU again
			return
		endif
		if var($n $QUEST_ID_KILLED >= $NUM_KILLABLES)
			mpsetvar $i $QUEST_ID_REWARDED $n
			if EVAL('$EXP' != '')
				mpexp $n $EXP
			endif
			if EVAL('$FACTION' != '')
				mpfaction $n $FACTION +$NUMFACTION
			endif
			if EVAL('$QUEST_POINT' == 'YES') AND !QUESTWINNER($n *)
				mpoload QuestPoint
				give "a quest point" "$n"
			endif
			if EVAL('$GOLD' != '') AND EVAL('$GOLD' > 0)
				mpoload $GOLD
				give $GOLD "$n"
			endif
			mpoload fromfile $QUEST_ID_rewarditems.xml any
			if EVAL('$b' != '')
				give "$b" "$n"
			endif
			mpquestwin $n *
			$QUEST_WINSPEECH_TYPE $QUEST_WINSPEECH_TEXT
			mpendquest *
			mpqset * STATISTICS SUCCESS
			IF EVAL('$NEXT_QUEST' != '')
				mpstartquest $NEXT_QUEST
			ELSE
				IF EVAL('$MULTIPLE' == 'PREV')
					mptransfer $n $n
				ENDIF
			ENDIF
		else
		endif
	endif
~

FUNCTION_PROG CAN_ACCEPT
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) and ( EVAL('$MULTIPLE' != 'PREV') or QUESTWINNER($n previous) )
		if EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
			if VAR($n $QUEST_ID_ACCEPTED == '')
				RETURN TRUE
			endif
		endif
	endif
	RETURN CANCEL
~

FUNCTION_PROG DO_ACCEPT
	mpqset * REMAINING $DURATION
	MPSETVAR $i $QUEST_ID_ACCEPTED '$<$i $QUEST_ID_ACCEPTED> $n'
	mpsetvar $n $QUEST_ID_ACCEPTED 'YES'
	mpsetvar $n $QUEST_ID_KILLED 0
	mpqset * STATISTICS ACCEPTED
    mpscript $n INDIVIDUAL LOAD=$QUEST_ID_playertrack.script
~

SPEECH_PROG p i accept
	if CALLFUNC(CAN_ACCEPT)
		sayto "$n" $QUEST_INSTRUCTIONSSTRING
		MPCALLFUNC DO_ACCEPT
	else
		sayto "$n" Yes, yes, I know .. now off with you.
	endif
~
</DATA></FILE>
<FILE><NAME>$QUEST_ID_killable.script</NAME>
<DATA>
GREET_PROG 100
	if VAR($n $QUEST_ID_ACCEPTED != '')
		sayto "$n" $KILLABLES_RESPONSE
	endif
~
	
DEATH_PROG
	mpargset $9 $n
	if isfollow($n) and isnpc($n)
		mpargset $9 $%ISFOLLOW($n)%
	endif
	if VAR($9 $QUEST_ID_ACCEPTED != '')
		mpsetvar $9 $QUEST_ID_KILLED ++;
		if EVAL($NUM_KILLABLES > 1)
			mpechoat $9 Killed $<$9 $QUEST_ID_KILLED>/$NUM_KILLABLES
		else
		endif
	endif
~
</DATA></FILE>
<FILE><NAME>$QUEST_ID_playertrack.script</NAME>
<DATA>
ONCE_PROG 100
    mpsetvar $i INSTRUCTIONS $QUEST_INSTRUCTIONSSTRING
~

QUEST_TIME_PROG * -1
	if !QUESTWINNER($i *)
		mpechoat $i The quest '$QUEST_NAME' has ended
	endif
	mpqset * STATISTICS FAILED
~

RAND_PROG 99
    if QVAR(* REMAINING == '')
        MPENDQUEST $i
    else
        mpsetvar $i TIME_REMAINING $%QVAR(* REMAINING)%
    endif
~
</DATA></FILE>