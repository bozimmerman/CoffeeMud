#!QUESTMAKER_START_SCRIPT Competitive Capture #1
#An existing mob in your world needs one or more other existing mobs captured 
#and brought to him.  Finding and defeating the mob or mobs in combat will 
#cause the captured mob to follow the player peacefully.  There is also
#a peaceful mode for finding lost mobs. A reward is given upon delivery.
#
#!QUESTMAKER_PAGE Quest Name/Duration
#Enter the unique name and starting time/duration for your new quest.
#Times are entered as a simple number or math expression to denote a
#time in default ticks (4 second period), or you may follow the expression 
#with the word seconds, minutes, hours, days, mudhours, muddays, mudweeks,
#mudmonths, or mudyears.  Time expressions may include numbers, math 
#symbols, or the ? operator to generate random numbers.  Example:
#"5 + 3?10 minutes" would generate a frequency of 8-15 minutes.#
#
#Quest ID:
#Enter a unique name/id for your quest:
#$QUEST_ID=$UNIQUE_QUEST_NAME=competitive_capture_1
#
#Quest Name:
#Enter a friendly displayable name for your quest:
#$QUEST_NAME=$STRING=Competitive Capture #1
#
#Quest Frequency:
#This is the time between quest starts.
#$FREQUENCY=$TIMEEXPRESSION=90 minutes
#
#Quest Duration:
#This is how long your quest remains running, and how long a player 
#accepting the quest has to complete the quest and report back in.
#$DURATION=$TIMEEXPRESSION=90 minutes
#
#Quest-Player Criterium:
#You may leave this entry blank, or enter a Zapper Mask to describe what
#kinds of players may participate in this quest.  You can use this to set
#race, level, or other requirements.
#$QUEST_CRITERIA=$ZAPPERMASK
#
#!QUESTMAKER_PAGE Specify the Announcer
#The Announcer is the mob who will be wanting the other mob captured. This must
#be an existing mob in your world.  
#
#Announcer Area/Room: 
#Specify below the name of the area that your announcer mob will be located
#in and/or the room in which the mob can be found.  You may leave both blank
#to force the quest manager to find the mob somewhere in the world, but this
#will hurt the performance of your mud, so use with care.
#Use double-quotes around multi-word areas and room ids/names.
#  
#Announcer Area:
#$ANNOUNCER_AREA=($AREA)
#Announcer Room ID:
#$ANNOUNCER_ROOM=($ROOMID)
#
#Announcer mob name: 
#Specify the name of the mob who will act as the announcer mob.  
#Use double-quotes around multi-word names.
#If you specified an area or room above, then the mob must be located there.
#You may optionally have the quest manager select a 'random' mob by entering
#a mob name of ANY MASK= followed by a Zapper Mask (see help on 
#ZAPPERMASKS for information on zapper mask syntax).
#Remember, if the quest manager can not find your mob, the quest will not
#be started.
#$ANNOUNCER_NAME=$NAME
#
#!QUESTMAKER_PAGE Announcer Speeches
#Specify here some optional things to say for the announcer before and after the quest.
#
#Announcer announcement:
#Select what type of annoucement the announcer will make when the quest starts.
#$QUEST_ANNOUNCEMENT_TYPE=$CHOOSE=YELL,QUESTCHAT,MPECHO,SAY
#This is what the announcement says.  Leave it blank if you only want him to talk to people who enter the room with him.
#$QUEST_ANNOUNCEMENT=($STRING)=I have someone I need captured!
#
#Announcer Notification: 
#Specify some additional bit of speech the announcer mob will say to players when they enter the room.
#$QUEST_NOTIFYSTRING=($LONG_STRING)=I have someone I need captured!  Are you game?
#
#Announcer Instructions: 
#Specify some additional bit of speech the announcer mob will say to players when the quest is accepted.
#$QUEST_INSTRUCTIONSSTRING=($LONG_STRING)=I need you to capture some folks.  They are somewhere around somewhere.  Just beat them senseless, and they will yield to you.
#
#Announcer success:
#Select what type of speech the announcer will make when a player returns to him with the captured mobs.
#$QUEST_WINSPEECH_TYPE=$CHOOSE=SAY,MPECHO,QUESTCHAT,YELL
#This is what the announcement says.
#$QUEST_WINSPEECH_TEXT=($LONG_STRING)=Aha, we got them! Congratulations!
#
#Announcer failure:
#Select what type of speech the announcer will make when no one returns with the captured mobs.
#$QUEST_LOSESPEECH_TYPE=$CHOOSE=QUESTCHAT,MPECHO,SAY,YELL
#This is what the announcement says.
#$QUEST_LOSESPEECH_TEXT=($LONG_STRING)=Looks like I'll have wait for the law to get after them.
#
#!QUESTMAKER_PAGE Specify the Capturable Mob or Mobs
#The Capturables are the mob or mobs which must be defeated and captured.
#
#Capturables Area/Room: 
#Specify below the name of the area that your capturable mob or mobs will be located
#in and/or the room in which the mob or mobs can be found.  You may leave both blank
#to force the quest manager to find the mobs somewhere in the world, but this
#will hurt the performance of your mud, so use with care.  
#Use double-quotes around multi-word areas and room ids/names.
#
#Capturables Area:
#$CAPTURABLES_AREA=($AREA)
#Capturables Room:
#$CAPTURABLES_ROOMS=($ROOMID)
#
#Capturables mob names: 
#Specify the names of the mobs who will act as the capturables mob or mobs.  
#Use double-quotes around multi-word names.
#If you specified an area or rooms above, then the mobs must be located there. 
#You may optionally have the quest manager select a random mobs by entering
#a mob name of ANY MASK= followed by a Zapper Mask (see help on 
#ZAPPERMASKS for information on zapper mask syntax).
#Remember, if the quest manager can not find your mobs, the quest will not
#be started.
#$CAPTURABLES_NAMES=$NAME
#
#Num Capturables:
#Specify how many of the capturable mobs must be brought and presented to the announcer
#in order to complete the quest.
#$NUM_CAPTURABLES=($EXPRESSION)=1
#
#!QUESTMAKER_PAGE Capturables Behavior
#Select some details about the capturable mobs
#
#Capturables follow: 
#Set this to PEACEFUL if the capturable mobs will follow the player who discovers
#them, and VIOLENT if the capturable mobs must be defeated in combat first.
#$CAPTURABLES_FOLLOW=$CHOOSE=VIOLENT,PEACEFUL
#
#Capturables response: 
#You may optionally specify some additional bit of speech the capturables 
#mobs will say to the players when they enter the room with them. 
#$CAPTURABLES_RESPONSE=($STRING)=So, you've come for me.  Come and get me.
#
#Capturables surrender: 
#You may optionally specify some additional bit of speech the capturables 
#mobs will say to the players when they are defeated in combat.
#$CAPTURABLES_SURRENDER=($STRING)=I surrender
#
#!QUESTMAKER_PAGE Quest Completion
#Select some rewards for delivering the mobs:
#
#Reward items: 
#Specify zero or more items to choose from as a reward 
#$REWARD_ITEMS=$ITEMXML_ZEROORMORE
#
#Quest Point?
#$QUEST_POINT=$CHOOSE=YES,NO
#Amount of money (an amount, or leave blank):
#$GOLD=($EXPRESSION)
#Amount of experience points, blank for none, or a number% for percent of exp to next level:
#$EXP=($STRING)=10%
#
#Player Faction to give to or take from:
#$FACTION=($FACTION)
#If you selected a faction above, enter a new numeric amount, 
#or enter +value to add, or --value to subtract:
#$NUMFACTION=($STRING)
#
#Select whether a player may complete this quest multiple times,
#or 'prev' to require a previous quest, if multiple found.
#$MULTIPLE=$CHOOSE=YES,NO,PREV
#
#If you choose, you may have completion of this quest automatically start another.
#If this is what you want, enter the next quests name here:
#$NEXT_QUEST=($EXISTING_QUEST_NAME)
#
#$CATEGORY=($HIDDEN)=
#
#!QUESTMAKER_END_SCRIPT Competitive Capture #1

set name $QUEST_ID
set display $QUEST_NAME
set author $#AUTHOR
set questtype competitive_capture1
set category $CATEGORY
set instructions $QUEST_INSTRUCTIONSSTRING

set wait $FREQUENCY
set interval 1
#quiet

set minplayers 1
set playermask $QUEST_CRITERIA

set area $ANNOUNCER_AREA
set room $ANNOUNCER_ROOM
set mobgroup
set mob $ANNOUNCER_NAME
give stat keyplayer true
give script LOAD=$QUEST_ID_announcer.script
give stat charisma 100

set area $CAPTURABLES_AREA
set roomgroup $CAPTURABLES_ROOMS
set room
set mobgroup
set mobgroup $CAPTURABLES_NAMES
set mob
give script LOAD=$QUEST_ID_capturable.script

set duration $DURATION

<?xml version="1.0"?>
<FILE><NAME>$QUEST_ID_rewarditems.xml</NAME><DATA><ITEMS>$REWARD_ITEMS</ITEMS></DATA></FILE>
<FILE><NAME>$QUEST_ID_announcer.script</NAME>
<DATA>
ONCE_PROG 100
	MPQSET * INSTRUCTIONS $i in $a wants you to '$QUEST_INSTRUCTIONSSTRING'
	MPSETVAR * $QUEST_ID_ALREADY_TOLD ''
	MPSETVAR * $QUEST_ID_REWARDED ''
	MPSETVAR * $QUEST_ID_WARNED ''
	MPSETVAR * $QUEST_ID_ACCEPTED ''
	MPSETVAR * $QUEST_ID_CAPTURED ''
	MPSETVAR * $QUEST_ID_NUMACCEPTED ''
	$QUEST_ANNOUNCEMENT_TYPE $QUEST_ANNOUNCEMENT
~

QUEST_TIME_PROG * 1
	mpsetvar $i $QUEST_ID_NUMACCEPTED '$<$i $QUEST_ID_ACCEPTED>.LENGTH#'
	for $0 = 0 to< '$<$i $QUEST_ID_NUMACCEPTED>'
		tell "$<$i $QUEST_ID_ACCEPTED>.$0" You have 1 minute to complete my quest.
	next
~

QUEST_TIME_PROG * -1
	mpsetvar $i $QUEST_ID_NUMACCEPTED '$<$i $QUEST_ID_ACCEPTED>.LENGTH#'
	for $0 = 0 to< '$<$i $QUEST_ID_NUMACCEPTED>'
		if !QUESTWINNER('$<$i $QUEST_ID_ACCEPTED>.$0' *)
			tell "$<$i $QUEST_ID_ACCEPTED>.$0" You failed to complete my quest in time.
	    endif
		mpqset * STATISTICS FAILED
	next
	if VAR($i $QUEST_ID_REWARDED == '')
		$QUEST_LOSESPEECH_TYPE $QUEST_LOSESPEECH_TEXT
	endif
	MPSETVAR * $QUEST_ID_NUMACCEPTED ''
	MPSETVAR * $QUEST_ID_ALREADY_TOLD ''
	MPSETVAR * $QUEST_ID_ACCEPTED ''
	MPSETVAR * $QUEST_ID_REWARDED ''
	MPSETVAR * $QUEST_ID_WARNED ''
	MPSETVAR * $QUEST_ID_CAPTURED ''
~

SPEECH_PROG quest quests quest? quests?
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) and ( EVAL('$MULTIPLE' != 'PREV') or QUESTWINNER($n previous) )
		if EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
			if !STRIN('$<$i $QUEST_ID_ALREADY_TOLD>' '$n')
				if VAR($n $QUEST_ID_ACCEPTED == '')
					sayto "$n" $QUEST_NOTIFYSTRING -- just say 'i accept' to take on this quest.
					MPSETVAR $i $QUEST_ID_ALREADY_TOLD '$<$i $QUEST_ID_ALREADY_TOLD> "$n"'
				endif
			endif
		endif
	endif
~

ALL_GREET_PROG 100
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) and ( EVAL('$MULTIPLE' != 'PREV') or QUESTWINNER($n previous) )
		if EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
			if !STRIN('$<$i $QUEST_ID_ALREADY_TOLD>' '$n')
				if VAR($n $QUEST_ID_ACCEPTED == '')
					sayto "$n" $QUEST_NOTIFYSTRING -- just say 'i accept' to take on this quest.
					MPSETVAR $i $QUEST_ID_ALREADY_TOLD '$<$i $QUEST_ID_ALREADY_TOLD> "$n"'
				endif
			endif
		endif
	endif

	IF isnpc($n) and questmob($n *) and isfollow($n)
		mpargset $9 '$%ISFOLLOW($n)%'
		if ISLIKE($9 '$QUEST_CRITERIA') and ISPC($9)
			if  EVAL('$MULTIPLE' != 'YES') AND QUESTWINNER($9 *)
				sayto "$9" Not YOU again
				return
			endif
			if  VAR($i $QUEST_ID_REWARDED == $9)
				sayto "$9" Not YOU again
				return
			endif
			mpforce $n follow self
			mpforce $n follow $i
			mpsetvar $9 $QUEST_ID_CAPTURED ++;
			if var($9 $QUEST_ID_CAPTURED >= $NUM_CAPTURABLES)
				mpsetvar $i $QUEST_ID_REWARDED $9
				if EVAL('$EXP' != '')
					mpexp $9 $EXP
				endif
				if EVAL('$FACTION' != '')
					mpfaction $9 $FACTION +$NUMFACTION
				endif
				if EVAL('$QUEST_POINT' == 'YES') AND !QUESTWINNER($9 *)
					mpoload QuestPoint
					give "a quest point" "$9"
				endif
				if EVAL('$GOLD' != '') AND EVAL('$GOLD' > 0)
					mpoload $GOLD
					give $GOLD "$9"
				endif
				mpoload fromfile $QUEST_ID_rewarditems.xml any
				if EVAL('$b' != '')
					give "$b" "$n"
				endif
				mpquestwin $9 *
				$QUEST_WINSPEECH_TYPE $QUEST_WINSPEECH_TEXT
				mpendquest *
				mpqset * STATISTICS SUCCESS
				IF EVAL('$NEXT_QUEST' != '')
					mpstartquest $NEXT_QUEST
				ELSE
					IF EVAL('$MULTIPLE' == 'PREV')
						mptransfer $n $n
					ENDIF
				ENDIF
			else
				if EVAL($NUM_CAPTURABLES > 1)
					mpechoat $9 You've brought in $<$9 $QUEST_ID_CAPTURED>/$NUM_CAPTURABLES
				endif
			endif
		ENDIF
	endif
~

FUNCTION_PROG CAN_ACCEPT
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) and ( EVAL('$MULTIPLE' != 'PREV') or QUESTWINNER($n previous) )
		if EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
			if VAR($n $QUEST_ID_ACCEPTED == '')
				RETURN TRUE
			endif
		endif
	endif
	RETURN CANCEL
~

FUNCTION_PROG DO_ACCEPT
	mpqset * REMAINING $DURATION
	mpqset * STATISTICS ACCEPTED
	mpscript $n INDIVIDUAL LOAD=$QUEST_ID_playertrack.script
	MPSETVAR $i $QUEST_ID_ACCEPTED '$<$i $QUEST_ID_ACCEPTED> $n'
	mpsetvar $n $QUEST_ID_ACCEPTED 'YES'
	mpsetvar $n $QUEST_ID_CAPTURED 0
~

SPEECH_PROG p i accept
	if CALLFUNC(CAN_ACCEPT)
		sayto "$n" $QUEST_INSTRUCTIONSSTRING
		MPCALLFUNC DO_ACCEPT
	else
		sayto "$n" Yes, yes, I know .. now off with you.
	endif
~
</DATA></FILE>
<FILE><NAME>$QUEST_ID_capturable.script</NAME>
<DATA>
GREET_PROG 100
	if VAR($n $QUEST_ID_ACCEPTED != '') and !isfollow($i)
		sayto "$n" $CAPTURABLES_RESPONSE
		if EVAL('$CAPTURABLES_FOLLOW' == 'PEACEFUL')
			sayto "$n" $CAPTURABLES_SURRENDER
			mpstop all
			follow "$n"
		endif
	endif
~
	
CNCLMSG_PROG DEATH ALL
	if ISFIGHT($i)
		mpargset $9 '$%ISFIGHT($i)%'
		if VAR($9 $QUEST_ID_ACCEPTED != '')
			mpgset $i HITS 1
			mpstop all
			sayto "$9" $CAPTURABLES_SURRENDER
			follow "$9"
			RETURN CANCEL
		endif
	endif
~
</DATA></FILE>
<FILE><NAME>$QUEST_ID_playertrack.script</NAME>
<DATA>
ONCE_PROG 100
    mpsetvar $i INSTRUCTIONS $QUEST_INSTRUCTIONSSTRING
~
RAND_PROG 99
    if QVAR(* REMAINING == '')
        MPENDQUEST $i
    else
        mpsetvar $i TIME_REMAINING $%QVAR(* REMAINING)%
    endif
~
</DATA></FILE>