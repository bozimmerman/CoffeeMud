<TABLE WIDTH=100% BORDER=0 style="font-size:12" ID="TRIGGERSROOT">
<TR>
	<TD WIDTH=20%>Triggers:</TD>
	<TD><SELECT ID="TRIGGERDROPDOWN" STYLE="position:relative;" 
			ONCHANGE="var root = document.getElementById('TRIGGERSROOT'); root.triggerselected(); "
		>
		<OPTION VALUE="-1">Add New Trigger
		</SELECT>
		${contextHelpButt('Triggers Help','Triggers','RIGHT');}
</TD></TR>
<TR><TD COLSPAN=2>&nbsp;</TD>
<TR><TD WIDTH=20%>Name:</TD><TD>
	<INPUT id="TRIGGERNAME" type="text"
		ONCHANGE="var root = document.getElementById('TRIGGERSROOT'); root.triggerfieldchange(); "
	>
</TD></TR>
<TR><TD>Pattern:<BR>&nbsp;&nbsp;<INPUT id="TRIGGERREGEX" type="checkbox"
		ONCHANGE="var root = document.getElementById('TRIGGERSROOT'); root.triggerfieldchange(); "
	>(RegEx)</TD><TD VALIGN=TOP>
	<TEXTAREA id="TRIGGERPATTERN"
		ONCHANGE="var root = document.getElementById('TRIGGERSROOT'); root.triggerfieldchange(); "
	ROWS=2 STYLE="width:300px;"></TEXTAREA>
	${contextHelpButt('Regex Help','Regex','');}
</TD></TR>
<TR><TD>Run Once:</TD><TD>
	<INPUT id="TRIGGERRUNONCE" type="checkbox"
		ONCHANGE="var root = document.getElementById('TRIGGERSROOT'); root.triggerfieldchange(); "
	>
</TD></TR>
<TR><TD>Action:</TD><TD>
	<select id="TRIGGERACTION"
		ONCHANGE="var root = document.getElementById('TRIGGERSROOT'); root.triggerfieldchange(); root.triggeractionchange(); "
	>
		${
			var options = '';
			for(var act in SipletActions)
				options += '<option value="' + act+'">'+SipletActions[act].text;
			options;
		}
	</select>
	<INPUT id="TRIGGERAVALUE" type="text"
		ONCHANGE="var root = document.getElementById('TRIGGERSROOT'); root.triggerfieldchange(); "
		ONBLUR="var root = document.getElementById('TRIGGERSROOT'); root.triggeractionvalueblur(this);"
	>${contextHelpButt('Actions Help','Actions','');}
</TD></TR>
<TR><TD>Allowed:</TD><TD>
	<INPUT id="TRIGGERALLOWED" type="text" placeholder="e.g., win.isConnected()" style="width:300px;"
		ONCHANGE="var root = document.getElementById('TRIGGERSROOT'); root.triggerfieldchange(); "
	>
</TD></TR>
<TR><TD colspan="2">
	<SPAN ID="TRIGGERDELETE">${butt('Delete',"document.getElementById('TRIGGERSROOT').trydeltrigger();");}</SPAN>
</TD></TR>
</TABLE>
<SCRIPT>
	var fixtriggerspage=function(){
	if(document.getElementById('TRIGGERALLOWED'))
	{
		var RED = '#FF555B';
		var root = document.getElementById('TRIGGERSROOT');
		var triggers = root.parentNode.triggers;
		var global = root.parentNode.which == 'global';
		delete root.parentNode.triggers;
		delete root.parentNode.which;
		var dd = document.getElementById('TRIGGERDROPDOWN');
		var tname = document.getElementById('TRIGGERNAME');
		var tpatt = document.getElementById('TRIGGERPATTERN');
		var trege = document.getElementById('TRIGGERREGEX');
		var truno = document.getElementById('TRIGGERRUNONCE');
		var tacto = document.getElementById('TRIGGERACTION');
		var taval = document.getElementById('TRIGGERAVALUE');
		var tallo = document.getElementById('TRIGGERALLOWED');
		var delbutt = document.getElementById('TRIGGERDELETE');
		var rfields = [tname, tpatt, tacto, taval, tallo];
		dd.selectedIndex = -1;
		delbutt.style.visibility='hidden';
		for(var i=0;i < triggers.length;i++)
		{
			var trig = triggers[i];
			var opt = new Option(trig.name,i);
			dd.add(opt);
		}
		dd.selectedIndex = -1;
		root.triggerselected = function() {
			if(dd.value == "-1")
			{
				tname.value='';
				tname.style.backgroundColor = RED;
				tpatt.value='';
				tpatt.style.backgroundColor = RED;
				trege.checked=false;
				truno.checked=false;
				tacto.selectedIndex=-1;
				tacto.style.backgroundColor = RED;
				root.triggeractionchange();
				taval.value='';
				taval.style.backgroundColor = RED;
				tallo.value='win.isConnected()';
				delbutt.style.visibility='hidden';
			}
			else
			if(Number(dd.value) < triggers.length)
			{
				delbutt.style.visibility='visible';
				var trig = triggers[Number(dd.value)];
				tname.value=trig.name;
				tname.style.backgroundColor = 'white';
				tpatt.value=trig.pattern;
				tpatt.style.backgroundColor = 'white';
				trege.checked=trig.regex;
				truno.checked=trig.once;
				tallo.value=trig.allowed;
				tallo.style.backgroundColor = 'white';
				tacto.style.backgroundColor = 'white';
				var x1 = trig.action.indexOf('(');
				var x2 = trig.action.lastIndexOf(')');
				setSelectByValue(tacto,trig.action.substr(0,x1));
				taval.value=trig.action.substr(x1+1,x2-x1-1);
				taval.style.backgroundColor = 'white';
				root.triggeractionchange();
			}
		};
		root.triggerfieldchange = function() {
			if(dd.selectedIndex<0) return;
			if(!global)
				window.win = window.currWin;
			tname.style.backgroundColor = (tname.value.length==0)?RED:'white';
			tpatt.style.backgroundColor = (tpatt.value.length==0)?RED:'white';
			if(trege.checked) {
				try 
				{ 
					var a = new RegExp(tpatt.value,'g');
					if(!a.exec) 
						tpatt.style.backgroundColor = RED; 
				} catch(e) 
				{
					console.log(e);
					tpatt.style.backgroundColor = RED; 
				}
			}
			tallo.style.backgroundColor = !isValidExpression(tallo.value)?RED:'white';
			tacto.style.backgroundColor = (tacto.selectedIndex < 0)?RED:'white';
			var action = SipletActions[tacto.value];
			if(action)
				taval.style.backgroundColor = !IsQuotedStringArgument(taval.value,action.args,Siplet.R)?RED:'white';
			else
				taval.style.backgroundColor = 'white';
			if(tacto.value.indexOf('runScript')>=0)
			{
				var key = taval.value.replace(/^['"]|['"]$/g, '');
				var found;
				var globalScripts = GetGlobalScripts();
				found = FindAScript(globalScripts,key,true);
				if(!global)
					found = found || FindAScript(window.currWin.localScripts(),key,true);
				if(!found)
					taval.style.backgroundColor = RED;
			}
			delete window['win'];
			var myname = Number(dd.value)>=0?triggers[Number(dd.value)].name:'';
			for(var i=0;i < dd.options.length; i++)
			{
				if((dd.options[i].value == tname.value) && (myname != tname.value))
					tname.style.backgroundColor = RED;
			}
			for(var i=0;i < rfields.length; i++)
				if(rfields[i].style.backgroundColor == RED)
					return;
			var fact = tacto.value + '(' + taval.value + ');';
			if(Number(dd.value) < 0)
			{
				var newTrigger = {
					name: tname.value,
					allowed: tallo.value,
					regex: trege.checked,
					once: truno.checked,
					pattern: tpatt.value,
					action: fact
				};
				triggers.push(newTrigger);
				var opt = new Option(tname.value, triggers.length-1);
				dd.add(opt);
				dd.selectedIndex = dd.options.length-1;
				delbutt.style.visibility='visible';
			}
			else
			{
				var trig = triggers[Number(dd.value)];
				trig.name= tname.value;
				trig.allowed= tallo.value;
				trig.regex= trege.checked;
				trig.once= truno.checked;
				trig.pattern= tpatt.value;
				trig.action= fact;
				delete trig.disabled;
				dd.options[dd.selectedIndex].text = trig.name;
			}
			root.modifytriggers();
		};
		
		root.modifytriggers = function()
		{
			if(global)
			{
				setConfig('/global/triggers', triggers);
				for(var i=0;i < window.siplets.length; i++)
					window.siplets[i].globalTriggers = GetGlobalTriggers();
			}
			else
			{
				var phonebook = getConfig('/phonebook/dial',[]);
				if((window.currWin.pb) 
				&& (window.currWin.pbwhich) 
				&& (!window.currWin.pbwhich.startsWith('g')))
				{
					var pbindex = Number(window.currWin.pbwhich);
					var pb = phonebook[pbindex];
					pb.triggers = JSON.parse(JSON.stringify(triggers));
					var found = FindSipletsByPB(pb);
					if(!In(window.currWin, found))
						found.push(window.currWin);
					for(var i=0;i < found.length;i++)
					{
						found[i].pb = pb;
						found[i].triggers = null;
					}
					setConfig('/phonebook/dial',phonebook);
				}
			}
		};
		
		root.triggeractionvalueblur = function(dom){
			if((dom !== taval)
			||(dom.value.trim() == ''))
				return;
			if((tacto.selectedIndex<0)||(tacto.value==''))
				return;
			var action = SipletActions[tacto.value];
			if((action)&&(!IsQuotedStringArgument(dom.value,action.args,Siplet.R)))
			{
				dom.value = EnsureQuotedStringArguments(dom.value,action.args,Siplet.R);
				this.triggerfieldchange();
			}
		};

		root.triggeractionchange = function(dom) {
			taval.title = '';
			if((tacto.selectedIndex<0)||(tacto.value==''))
				return;
			var action = SipletActions[tacto.value];
			if(action)
			{
				var win = window.currWin;
				if(!win) { 
					taval.title = action.args+' argument(s)'
					return;
				}
				var func = eval(tacto.value);
				func = func.toString();
				var match = func.match(/\(([^)]*)\)/);
				taval.title = match ? match[1] : '';
			}
		};
		
		root.trydeltrigger = function() {
			var trigindex = Number(dd.value);
			if(trigindex < 0)
				return;
			SiConfirm('Delete '+dd.options[dd.selectedIndex].text+'?',function(){
				var curr=dd.selectedIndex;
				dd.selectedIndex=-1;
				dd.remove(curr);
				for(var i=0;i < dd.options.length;i++)
					if(Number(dd.options[i].value)>trigindex)
						dd.options[i].value=(Number(dd.options[i].value)-1);
				var deadt = triggers[trigindex];
				triggers.splice(trigindex,1);
				root.modifytriggers();
				tname.value='';
				tname.style.backgroundColor = 'white';
				tpatt.value='';
				tpatt.style.backgroundColor = 'white';
				trege.checked=false;
				truno.checked=false;
				tacto.selectedIndex=-1;
				tacto.style.backgroundColor = 'white';
				root.triggeractionchange();
				taval.value='';
				taval.style.backgroundColor = 'white';
				tallo.value='';
				delbutt.style.visibility='hidden';
			});
		};
	} else
		setTimeout(fixtriggerspage,10);
};setTimeout(fixtriggerspage,10);
</SCRIPT>
