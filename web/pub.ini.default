#
# PORTS
# For the PORT and SSLPORT entry, specify a comma-delimited set of ports to listen on for
# normal http (PORT) and ssl/https (SSLPORT).  The server will attempt to listen on as
# many of the ports in your list as it can.  If it can not listen on any, it will give up
# and die.
#
PORT=27744,80
#SSLPORT=443
#BIND=127.0.0.1

#
# REQUEST LIMITS
# This is some fine tuning regarding constraints on http requests.  You can
# specify the maximum size of any request body (REQUESTMAXBODYBYTES), the
# number of milliseconds a connection can sit idle between requests (REQUESTMAXIDLEMS),
# The maximum size of any one line of request data, such individual headers, url length,
# etc (REQUESTLINEBUFBYTES), the longest amount of time a connection can hang around
# sending requests to the web server and receiving data (REQUESTMAXALIVESECS), and the
# maximum number of requests that can be made on a single connection (REQUESTMAXPERCONN).  
REQUESTMAXALIVESECS=600
REQUESTMAXIDLEMS=5000

#
# THREAD POOL TWEEKING
# Now for the really geeky stuff.  The web server will try to process as many requests at
# the same time as it can by spawning threads when it needs to.  You can tweek this process
# right here.  You can specify the minimum number of threads to keep hanging around waiting
# to process requests (CORETHREADPOOLSIZE), as well as the absolute maximum number (MAXTHREADS).
# You can also specify the amount of time a thread goes unused before it is shut down 
# (MAXTHREADIDLEMILLIS), the maximum number of tasks that can be queued up waiting for thread
# time (MAXTHREADQUEUESIZE), and the absolute maximum amount of time a thread is allowed to
# work on any one task (MAXTHREADTIMEOUTSECS).
MAXTHREADTIMEOUTSECS=30

#
# ERROR PAGE
# When an error or exception is generated, which page is displayed.  This is a LOCAL PATH, 
# either relative or absolute.
#
ERRORPAGE=/web/pub.templates/errorpage.cwhtml

# BROWSE PAGE
# When a directory is encountered which is permitted to be browsed (see BROWSE below), this
# is the local path, relative or absolute, of the page to display.  If the page is kept at
# cwhtml or another Convertable type, then the page will correctly fill in directory
# entries.
#
BROWSEPAGE=/web/pub.templates/browsepage.cwhtml

#
# MOUNT LISTS
# This is where you specify how requested hosts and contexts will map to actual directories on 
# your local hard drive.  The way it works is that you specify the word MOUNT followed by a 
# forward slash character / and the optional host name and optional port, and the context, then 
# set that equal to the coffeemud directory path that the given context should map to.
# Be sure to end your hard drive path with a path separator /.
# The example (MOUNT/mydomain.com:80/remote=root/local/) maps the context /remote on the host
#   "mydomain.com" on port 80 to the relative local path "root/local/"
# The example (MOUNT/=root/) maps the root context / to the relative local path "root/" for all
#   hosts and ports.
MOUNT/=/web/pub/
MOUNT/guides=/guides/

#
# BROWSE LISTS
# This is where you specify which virtual paths which, after going through mount processing,
# resolve to directories that you will permit browsing of. Specify the word BROWSE followed by a 
# forward slash character / and the optional host name and optional port, and the context, then 
# set that equal to anything you like (the value is reserved for future use at this point).
# The example (BROWSE/mydomain.com:80/mysubdir=OK) allows the context /mysubdir on the host
#   "mydomain.com" on port 80 to be browsed.
# The example (BROWSE/=YES) allows all directories, all hosts, all ports, to be browseable
# BROWSE/=FINE!
